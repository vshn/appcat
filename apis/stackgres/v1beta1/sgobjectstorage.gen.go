// Package v1beta1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package v1beta1

// SGObjectStorageSpec defines model for SGObjectStorageSpec.
type SGObjectStorageSpec struct {
	// Azure Blob Storage configuration.
	AzureBlob *SGObjectStorageSpecAzureBlob `json:"azureBlob,omitempty"`

	// Google Cloud Storage configuration.
	Gcs *SGObjectStorageSpecGcs `json:"gcs,omitempty"`

	// Amazon Web Services S3 configuration.
	S3 *SGObjectStorageSpecS3 `json:"s3,omitempty"`

	// AWS S3-Compatible API configuration
	S3Compatible *SGObjectStorageSpecS3Compatible `json:"s3Compatible,omitempty"`

	// Determine the type of object storage used for storing the base backups and WAL segments.
	//       Possible values:
	//       *  `s3`: Amazon Web Services S3 (Simple Storage Service).
	//       *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
	//       *  `gcs`: Google Cloud Storage.
	//       *  `azureBlob`: Microsoft Azure Blob Storage.
	Type string `json:"type"`
}

// SGObjectStorageSpecAzureBlob defines model for SGObjectStorageSpecAzureBlob.
type SGObjectStorageSpecAzureBlob struct {
	// The credentials to access Azure Blob Storage for writing and reading.
	AzureCredentials SGObjectStorageSpecAzureBlobAzureCredentials `json:"azureCredentials"`

	// Azure Blob Storage bucket name.
	Bucket string `json:"bucket"`
}

// SGObjectStorageSpecAzureBlobAzureCredentials defines model for SGObjectStorageSpecAzureBlobAzureCredentials.
type SGObjectStorageSpecAzureBlobAzureCredentials struct {
	// Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
	SecretKeySelectors *SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectors `json:"secretKeySelectors,omitempty"`
}

// SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectors defines model for SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectors.
type SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectors struct {
	// The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
	AccessKey SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsAccessKey `json:"accessKey"`

	// The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
	StorageAccount SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsStorageAccount `json:"storageAccount"`
}

// SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsAccessKey defines model for SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsAccessKey.
type SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsAccessKey struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsStorageAccount defines model for SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsStorageAccount.
type SGObjectStorageSpecAzureBlobAzureCredentialsSecretKeySelectorsStorageAccount struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecGcs defines model for SGObjectStorageSpecGcs.
type SGObjectStorageSpecGcs struct {
	// GCS bucket name.
	Bucket string `json:"bucket"`

	// The credentials to access GCS for writing and reading.
	GcpCredentials SGObjectStorageSpecGcsGcpCredentials `json:"gcpCredentials"`
}

// SGObjectStorageSpecGcsGcpCredentials defines model for SGObjectStorageSpecGcsGcpCredentials.
type SGObjectStorageSpecGcsGcpCredentials struct {
	// If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.
	//
	// This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
	FetchCredentialsFromMetadataService *bool `json:"fetchCredentialsFromMetadataService,omitempty"`

	// A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
	SecretKeySelectors *SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectors `json:"secretKeySelectors,omitempty"`
}

// SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectors defines model for SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectors.
type SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectors struct {
	// A service account key from GCP. In JSON format, as downloaded from the GCP Console.
	ServiceAccountJSON SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectorsServiceAccountJSON `json:"serviceAccountJSON"`
}

// SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectorsServiceAccountJSON defines model for SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectorsServiceAccountJSON.
type SGObjectStorageSpecGcsGcpCredentialsSecretKeySelectorsServiceAccountJSON struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecS3 defines model for SGObjectStorageSpecS3.
type SGObjectStorageSpecS3 struct {
	// The credentials to access AWS S3 for writing and reading.
	AwsCredentials SGObjectStorageSpecS3AwsCredentials `json:"awsCredentials"`

	// AWS S3 bucket name.
	Bucket string `json:"bucket"`

	// The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
	Region *string `json:"region,omitempty"`

	// The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
	StorageClass *string `json:"storageClass,omitempty"`
}

// SGObjectStorageSpecS3AwsCredentials defines model for SGObjectStorageSpecS3AwsCredentials.
type SGObjectStorageSpecS3AwsCredentials struct {
	// Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
	SecretKeySelectors SGObjectStorageSpecS3AwsCredentialsSecretKeySelectors `json:"secretKeySelectors"`
}

// SGObjectStorageSpecS3AwsCredentialsSecretKeySelectors defines model for SGObjectStorageSpecS3AwsCredentialsSecretKeySelectors.
type SGObjectStorageSpecS3AwsCredentialsSecretKeySelectors struct {
	// AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
	AccessKeyId SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsAccessKeyId `json:"accessKeyId"`

	// AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
	SecretAccessKey SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsSecretAccessKey `json:"secretAccessKey"`
}

// SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsAccessKeyId defines model for SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsAccessKeyId.
type SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsAccessKeyId struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsSecretAccessKey defines model for SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsSecretAccessKey.
type SGObjectStorageSpecS3AwsCredentialsSecretKeySelectorsSecretAccessKey struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecS3Compatible defines model for SGObjectStorageSpecS3Compatible.
type SGObjectStorageSpecS3Compatible struct {
	// The credentials to access AWS S3 for writing and reading.
	AwsCredentials SGObjectStorageSpecS3CompatibleAwsCredentials `json:"awsCredentials"`

	// Bucket name.
	Bucket string `json:"bucket"`

	// Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).
	//
	// Defaults to false.
	EnablePathStyleAddressing *bool `json:"enablePathStyleAddressing,omitempty"`

	// Overrides the default url to connect to an S3-compatible service.
	// For example: `http://s3-like-service:9000`.
	Endpoint *string `json:"endpoint,omitempty"`

	// The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
	Region *string `json:"region,omitempty"`

	// The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
	StorageClass *string `json:"storageClass,omitempty"`
}

// SGObjectStorageSpecS3CompatibleAwsCredentials defines model for SGObjectStorageSpecS3CompatibleAwsCredentials.
type SGObjectStorageSpecS3CompatibleAwsCredentials struct {
	// Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.29/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
	SecretKeySelectors SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectors `json:"secretKeySelectors"`
}

// SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectors defines model for SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectors.
type SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectors struct {
	// AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
	AccessKeyId SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsAccessKeyId `json:"accessKeyId"`

	// CA Certificate file to be used when connecting to the S3 Compatible Service.
	CaCertificate *SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsCaCertificate `json:"caCertificate,omitempty"`

	// AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
	SecretAccessKey SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsSecretAccessKey `json:"secretAccessKey"`
}

// SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsAccessKeyId defines model for SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsAccessKeyId.
type SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsAccessKeyId struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsCaCertificate defines model for SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsCaCertificate.
type SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsCaCertificate struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}

// SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsSecretAccessKey defines model for SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsSecretAccessKey.
type SGObjectStorageSpecS3CompatibleAwsCredentialsSecretKeySelectorsSecretAccessKey struct {
	// The key of the secret to select from. Must be a valid secret key.
	Key string `json:"key"`

	// Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name string `json:"name"`
}
