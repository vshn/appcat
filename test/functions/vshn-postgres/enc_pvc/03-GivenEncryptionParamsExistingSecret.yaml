desired:
  composite:
    resource:
      apiVersion: vshn.appcat.vshn.io/v1
      kind: XVSHNPostgreSQL
      metadata:
        creationTimestamp: "2023-03-21T16:52:31Z"
        finalizers:
        - composite.apiextensions.crossplane.io
        generateName: pgsql-
        generation: 13
        labels:
          appuio.io/organization: vshn
          crossplane.io/claim-name: pgsql
          crossplane.io/claim-namespace: unit-test
          crossplane.io/composite: psql
        name: psql
      spec:
        parameters: null
        writeConnectionSecretToRef: {}
      status: {}
  resources:
    cluster:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata: {}
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGCluster
              metadata: {}
              spec:
                configurations:
                  backups:
                  - cronSchedule: ""
                    retention: 6
                    sgObjectStorage: ""
                  sgPostgresConfig: ""
                instances: 1
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: ""
                postgres:
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: ""
                sgInstanceProfile: ""
          providerConfigRef:
            name: kubernetes
observed:
  composite:
    resource:
      apiVersion: vshn.appcat.vshn.io/v1
      kind: XVSHNPostgreSQL
      metadata:
        annotations: null
        creationTimestamp: "2023-03-21T16:52:31Z"
        finalizers:
        - composite.apiextensions.crossplane.io
        generateName: pgsql-
        generation: 13
        labels:
          appuio.io/organization: vshn
          crossplane.io/claim-name: pgsql
          crossplane.io/claim-namespace: unit-test
          crossplane.io/composite: psql
        name: psql
      spec:
        claimRef:
          apiVersion: vshn.appcat.vshn.io/v1
          kind: VSHNPostgreSQL
          name: pgsql
          namespace: unit-test
        compositionRef:
          name: vshnpostgres.vshn.appcat.vshn.io
        compositionRevisionRef:
          name: vshnpostgres.vshn.appcat.vshn.io-ce52f13
        compositionUpdatePolicy: Automatic
        parameters:
          instances: 1
          encryption:
            enabled: true
      status:
        instanceNamespace: my-psql
  resources:
    psql-luks-key-0:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-luks-key
          namespace: test
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-data-psql-0-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-data-psql-0-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
            providerConfigRef:
              name: kubernetes
    # CNPG
    psql-cluster-1-luks-key:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-cluster-1-luks-key
          namespace: test
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-cluster-1-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-cluster-1-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
            providerConfigRef:
              name: kubernetes
    psql-cluster-1-wal-luks-key:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-cluster-1-wal-luks-key
          namespace: test
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-cluster-1-wal-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              data:
                luksKey: Rm9vMTIzNDU2Nzg5MEJhcjA5ODc2NTQzMjE=
              kind: Secret
              metadata:
                name: psql-cluster-1-wal-luks-key
                namespace: vshn-postgresql-pgsql-gc9x4
            providerConfigRef:
              name: kubernetes
input:
  apiVersion: v1
  data:
    additionalMaintenanceClusterRole: role
    defaultPlan: standard-1
    controlNamespace: appcat-control
    plans:
      '{"standard-1": {"size": {"cpu": "250m", "disk": "16Gi", "enabled": true,
      "memory": "1Gi"}}}'

