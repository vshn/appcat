desired:
  composite:
    resource:
      apiVersion: vshn.appcat.vshn.io/v1
      kind: XVSHNPostgreSQL
      metadata:
        creationTimestamp: "2023-03-21T16:52:31Z"
        finalizers:
        - composite.apiextensions.crossplane.io
        generateName: pgsql-
        generation: 13
        labels:
          appuio.io/organization: vshn
          crossplane.io/claim-name: pgsql
          crossplane.io/claim-namespace: unit-test
          crossplane.io/composite: pgsql-gc9x4
        name: pgsql-gc9x4
      spec:
        parameters:
          updateStrategy:
            type: OnRestart
        writeConnectionSecretToRef: {}
      status:
        instanceNamespace: my-psql
observed:
  composite:
    resource:
      apiVersion: vshn.appcat.vshn.io/v1
      kind: XVSHNPostgreSQL
      metadata:
        creationTimestamp: "2023-03-21T16:52:31Z"
        finalizers:
        - composite.apiextensions.crossplane.io
        generateName: pgsql-
        generation: 13
        labels:
          appuio.io/organization: vshn
          crossplane.io/claim-name: pgsql
          crossplane.io/claim-namespace: unit-test
          crossplane.io/composite: pgsql-gc9x4
        name: pgsql-gc9x4
      spec:
        parameters:
          updateStrategy:
            type: OnRestart
        writeConnectionSecretToRef: {}
      status:
        instanceNamespace: my-psql
  resources:
    cluster:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-cluster
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGCluster
              metadata:
                name: psql-gc9x4
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                configurations:
                  backups:
                  - cronSchedule: 44 20 * * *
                    retention: 6
                    sgObjectStorage: sgbackup-psql-gc9x4
                  sgPostgresConfig: psql-gc9x4
                instances: 1
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: 20Gi
                  scheduling:
                    nodeSelector: {}
                postgres:
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: "15"
                sgInstanceProfile: psql-gc9x4
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGCluster
              metadata:
                annotations: null
                creationTimestamp: "2023-04-27T09:21:42Z"
                generation: 8
                name: psql-gc9x4
                namespace: vshn-postgresql-psql-gc9x4
                resourceVersion: "583272583"
                uid: 44ead047-98de-4e73-9cc0-d99454090a36
              spec:
                configurations:
                  backups:
                  - cronSchedule: 44 20 * * *
                    path: sgbackups.stackgres.io/vshn-postgresql-psql-gc9x4/buzz-qvgrd/15
                    retention: 6
                    sgObjectStorage: sgbackup-psql-gc9x4
                  sgPoolingConfig: generated-from-default-1682587302016
                  sgPostgresConfig: psql-gc9x4
                instances: 1
                managedSql:
                  scripts:
                  - id: 0
                    sgScript: psql-gc9x4-default
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: 20Gi
                  scheduling:
                    nodeSelector: {}
                postgres:
                  flavor: vanilla
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: "15.1"
                postgresServices:
                  primary:
                    enabled: true
                    type: ClusterIP
                  replicas:
                    enabled: true
                    type: ClusterIP
                replication:
                  mode: async
                  role: ha-read
                sgInstanceProfile: psql-gc9x4
                toInstallPostgresExtensions: []
              status:
                arch: x86_64
                conditions:
                - lastTransitionTime: "2023-04-27T09:22:22.200237Z"
                  reason: FalseFailed
                  status: "False"
                  type: Failed
                - lastTransitionTime: "2023-04-27T09:22:22.226244Z"
                  reason: TruePendingRestart
                  status: "True"
                  type: PendingRestart
                - lastTransitionTime: "2023-04-27T09:22:22.226273Z"
                  reason: FalsePendingUpgrade
                  status: "False"
                  type: PendingUpgrade
                managedSql:
                  scripts:
                  - completedAt: "2023-04-27T09:22:52.795696Z"
                    id: 0
                    scripts:
                    - id: 0
                      version: 0
                    startedAt: "2023-04-27T09:22:52.631407Z"
                    updatedAt: "2023-04-27T09:22:52.631418Z"
                os: linux
                podStatuses:
                - installedPostgresExtensions: []
                  name: psql-gc9x4-0
                  pendingRestart: true
                  primary: true
                  replicationGroup: 0
    pgsql-gc9x4-pg-restart-1679815342:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-pg-restart-1679815342
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1679815342
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-03-26T07:22:22Z"
                sgCluster: psql-gc9x4
              status: {}
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1679815342
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-03-26T07:22:22Z"
                sgCluster: psql-gc9x4
              status: {}
    pgsql-gc9x4-pg-restart-1682493742:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-pg-restart-1682493742
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1682493742
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-04-27T10:00:22Z"
                sgCluster: psql-gc9x4
              status: {}
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1682493742
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-04-27T10:00:22Z"
                sgCluster: psql-gc9x4
              status: {}
    pgsql-gc9x4-pg-restart-1682587342:
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          name: pgsql-gc9x4-pg-restart-1682587342
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1682587342
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-04-27T09:22:22Z"
                sgCluster: psql-gc9x4
              status: {}
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGDbOps
              metadata:
                name: pg-restart-1682587342
                namespace: vshn-postgresql-psql-gc9x4
              spec:
                op: restart
                runAt: "2023-04-27T10:02:22Z"
                sgCluster: psql-gc9x4
              status: {}
