config:
  apiVersion: v1
  data:
    emailAlertingEnabled: "true"
    emailAlertingSecretName: mailgun-smtp-credentials
    emailAlertingSecretNamespace: syn-appcat
    emailAlertingSmtpFromAddress: myuser@example.com
    emailAlertingSmtpHost: smtp.eu.mailgun.org:465
    emailAlertingSmtpUsername: myuser@example.com
    imageTag: add_PSQLServiceType
    sgNamespace: stackgres
  kind: ConfigMap
  metadata:
    labels:
      name: xfn-config
    name: xfn-config
observed:
  composite:
    resource:
      apiVersion: vshn.appcat.vshn.io/v1
      kind: XVSHNPostgreSQL
      metadata:
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"vshn.appcat.vshn.io/v1","kind":"VSHNPostgreSQL","metadata":{"annotations":{},"name":"postgresql-prod","namespace":"app1-prod"},"spec":{"parameters":{"backup":{"schedule":"0
            22 * *
            *"},"network":{"serviceType":"LoadBalancer"},"service":{"majorVersion":"15"}},"writeConnectionSecretToRef":{"name":"postgres-creds-connection"}}}
        creationTimestamp: 2023-07-28T09:05:53Z
        finalizers:
          - composite.apiextensions.crossplane.io
        generateName: postgresql-prod-
        generation: 5
        labels:
          crossplane.io/claim-name: postgresql-prod
          crossplane.io/claim-namespace: app1-prod
          crossplane.io/composite: postgresql-prod-n97jr
        managedFields:
          - apiVersion: vshn.appcat.vshn.io/v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:kubectl.kubernetes.io/last-applied-configuration: {}
                f:finalizers:
                  .: {}
                  v:"composite.apiextensions.crossplane.io": {}
                f:generateName: {}
                f:labels:
                  .: {}
                  f:crossplane.io/claim-name: {}
                  f:crossplane.io/claim-namespace: {}
                  f:crossplane.io/composite: {}
              f:spec:
                .: {}
                f:claimRef:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
                f:compositionRef:
                  .: {}
                  f:name: {}
                f:compositionRevisionRef:
                  .: {}
                  f:name: {}
                f:compositionUpdatePolicy: {}
                f:parameters:
                  .: {}
                  f:backup:
                    .: {}
                    f:deletionProtection: {}
                    f:deletionRetention: {}
                    f:retention: {}
                    f:schedule: {}
                  f:encryption: {}
                  f:instances: {}
                  f:maintenance:
                    .: {}
                    f:dayOfWeek: {}
                    f:timeOfDay: {}
                  f:monitoring: {}
                  f:network:
                    .: {}
                    f:ipFilter: {}
                    f:serviceType: {}
                  f:replication: {}
                  f:restore: {}
                  f:scheduling: {}
                  f:service:
                    .: {}
                    f:majorVersion: {}
                  f:size:
                    .: {}
                    f:plan: {}
                    f:requests: {}
                  f:updateStrategy:
                    .: {}
                    f:type: {}
                f:resourceRefs: {}
                f:writeConnectionSecretToRef:
                  .: {}
                  f:name: {}
                  f:namespace: {}
            manager: crossplane
            operation: Update
            time: 2023-07-28T09:05:55Z
          - apiVersion: vshn.appcat.vshn.io/v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                .: {}
                f:certificateConditions: {}
                f:conditions: {}
                f:instanceNamespace: {}
                f:localCAConditions: {}
                f:namespaceConditions: {}
                f:networkPolicyConditions: {}
                f:pgclusterConditions: {}
                f:pgconfigConditions: {}
                f:profileConditions: {}
                f:secretConditions: {}
            manager: crossplane
            operation: Update
            subresource: status
            time: 2023-07-28T09:06:01Z
        name: postgresql-prod-n97jr
        resourceVersion: "57775"
        uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
      spec:
        claimRef:
          apiVersion: vshn.appcat.vshn.io/v1
          kind: VSHNPostgreSQL
          name: postgresql-prod
          namespace: app1-prod
        compositionRef:
          name: vshnpostgres.vshn.appcat.vshn.io
        compositionRevisionRef:
          name: vshnpostgres.vshn.appcat.vshn.io-e3a29c9
        compositionUpdatePolicy: Automatic
        parameters:
          backup:
            deletionProtection: true
            deletionRetention: 7
            retention: 6
            schedule: 0 22 * * *
          encryption: {}
          instances: 1
          maintenance:
            dayOfWeek: tuesday
            timeOfDay: 21:21:58
          monitoring: {}
          network:
            ipFilter:
              - 0.0.0.0/0
            serviceType: LoadBalancer
          replication: {}
          restore: {}
          scheduling: {}
          service:
            majorVersion: "15"
          size:
            plan: standard-2
            requests: {}
          updateStrategy:
            type: Immediate
        resourceRefs:
          - apiVersion: appcat.vshn.io/v1
            kind: XObjectBucket
            name: postgresql-prod-n97jr
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: ns-observer-postgresql-prod-n97jr
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-certificate
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-cluster
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-connection
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-postgresql-master
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-localca
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-maintenance-role
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-maintenance-rolebinding
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-maintenance-secret
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-maintenance-serviceaccount
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-maintenancejob
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-network-policy
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-object-storage
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-pgconf
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-podmonitor
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-profile
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-prometheusrule
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: postgresql-prod-n97jr-service-rolebinding
          - apiVersion: kubernetes.crossplane.io/v1alpha1
            kind: Object
            name: vshn-postgresql-postgresql-prod-n97jr
        writeConnectionSecretToRef:
          name: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          namespace: syn-crossplane
      status:
        certificateConditions:
          - lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:58Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        conditions:
          - lastTransitionTime: 2023-07-28T12:59:03Z
            message: 'cannot compose resources: cannot run Composition Function pipeline:
              cannot run function "pgsql-func": cannot run container: rpc error:
              code = Unavailable desc = connection error: desc = "transport:
              Error while dialing: dial tcp 172.17.0.1:9547: connect: connection
              refused"'
            reason: ReconcileError
            status: "False"
            type: Synced
          - lastTransitionTime: 2023-07-28T09:06:15Z
            reason: Available
            status: "True"
            type: Ready
        instanceNamespace: vshn-postgresql-postgresql-prod-n97jr
        localCAConditions:
          - lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:59Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        namespaceConditions:
          - lastTransitionTime: 2023-07-28T09:05:58Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        networkPolicyConditions:
          - lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        pgclusterConditions:
          - lastTransitionTime: 2023-07-28T09:06:01Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:06:01Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        pgconfigConditions:
          - lastTransitionTime: 2023-07-28T09:06:00Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:59Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        profileConditions:
          - lastTransitionTime: 2023-07-28T09:05:58Z
            reason: Available
            status: "True"
            type: Ready
          - lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
        secretConditions:
          - lastTransitionTime: 2023-07-28T09:06:07Z
            reason: ReconcileSuccess
            status: "True"
            type: Synced
          - lastTransitionTime: 2023-07-28T09:06:06Z
            reason: Available
            status: "True"
            type: Ready
    connectionDetails:
      - name: LOADBALANCER_IP
        value: 172.18.0.200
      - name: POSTGRESQL_URL
    
      - name: POSTGRESQL_HOST
        value: postgresql-prod-n97jr.vshn-postgresql-postgresql-prod-n97jr.svc.cluster.local
      - name: POSTGRESQL_PORT
        value: "5432"
      - name: POSTGRESQL_USER
        value: postgres
      - name: POSTGRESQL_DB
        value: postgres
  resources:
    - name: cluster
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: cluster
            crossplane.io/external-create-failed: 2023-07-28T09:06:00Z
            crossplane.io/external-create-pending: 2023-07-28T09:06:01Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:01Z
            crossplane.io/external-name: postgresql-prod-n97jr-cluster
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:configurations:
                          .: {}
                          f:backups: {}
                          f:sgPostgresConfig: {}
                        f:instances: {}
                        f:nonProductionOptions:
                          .: {}
                          f:enableSetPatroniCpuRequests: {}
                          f:enableSetPatroniMemoryRequests: {}
                        f:pods:
                          .: {}
                          f:persistentVolume:
                            .: {}
                            f:size: {}
                          f:scheduling: {}
                        f:postgres:
                          .: {}
                          f:extensions: {}
                          f:ssl:
                            .: {}
                            f:certificateSecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                            f:enabled: {}
                            f:privateKeySecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                          f:version: {}
                        f:postgresServices:
                          .: {}
                          f:primary:
                            .: {}
                            f:type: {}
                        f:replication:
                          .: {}
                          f:mode: {}
                          f:syncInstances: {}
                        f:sgInstanceProfile: {}
                      f:status: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:01Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:stackgres.io/operatorVersion: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:configurations:
                          .: {}
                          f:backups: {}
                          f:sgPoolingConfig: {}
                          f:sgPostgresConfig: {}
                        f:instances: {}
                        f:managedSql:
                          .: {}
                          f:scripts: {}
                        f:nonProductionOptions:
                          .: {}
                          f:enableSetPatroniCpuRequests: {}
                          f:enableSetPatroniMemoryRequests: {}
                        f:pods:
                          .: {}
                          f:persistentVolume:
                            .: {}
                            f:size: {}
                          f:scheduling: {}
                        f:postgres:
                          .: {}
                          f:extensions: {}
                          f:flavor: {}
                          f:ssl:
                            .: {}
                            f:certificateSecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                            f:enabled: {}
                            f:privateKeySecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                          f:version: {}
                        f:postgresServices:
                          .: {}
                          f:primary:
                            .: {}
                            f:enabled: {}
                            f:type: {}
                          f:replicas:
                            .: {}
                            f:enabled: {}
                            f:type: {}
                        f:replication:
                          .: {}
                          f:mode: {}
                          f:role: {}
                          f:syncInstances: {}
                        f:sgInstanceProfile: {}
                        f:toInstallPostgresExtensions: {}
                      f:status:
                        .: {}
                        f:arch: {}
                        f:conditions: {}
                        f:managedSql:
                          .: {}
                          f:scripts: {}
                        f:os: {}
                        f:podStatuses: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:08:02Z
          name: postgresql-prod-n97jr-cluster
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6664"
          uid: 63d907ca-fec5-4d00-bc34-88217a011143
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGCluster
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                configurations:
                  backups:
                    - cronSchedule: 0 22 * * *
                      retention: 6
                      sgObjectStorage: sgbackup-postgresql-prod-n97jr
                  sgPostgresConfig: postgresql-prod-n97jr
                instances: 1
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: 20Gi
                  scheduling: {}
                postgres:
                  extensions:
                    - name: pg_repack
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: "15"
                postgresServices:
                  primary:
                    type: LoadBalancer
                replication:
                  mode: async
                  syncInstances: 1
                sgInstanceProfile: postgresql-prod-n97jr
              status: {}
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGCluster
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"stackgres.io/v1","kind":"SGCluster","metadata":{"name":"postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"configurations":{"backups":[{"cronSchedule":"0
                    22 * *
                    *","retention":6,"sgObjectStorage":"sgbackup-postgresql-prod-n97jr"}],"sgPostgresConfig":"postgresql-prod-n97jr"},"instances":1,"nonProductionOptions":{"enableSetPatroniCpuRequests":true,"enableSetPatroniMemoryRequests":true},"pods":{"persistentVolume":{"size":"20Gi"},"scheduling":{}},"postgres":{"extensions":[{"name":"pg_repack"}],"ssl":{"certificateSecretKeySelector":{"key":"tls.crt","name":"tls-certificate"},"enabled":true,"privateKeySecretKeySelector":{"key":"tls.key","name":"tls-certificate"}},"version":"15"},"postgresServices":{"primary":{"type":"LoadBalancer"}},"replication":{"mode":"async","syncInstances":1},"sgInstanceProfile":"postgresql-prod-n97jr"},"status":{}}'
                  stackgres.io/operatorVersion: 1.5.0
                creationTimestamp: 2023-07-28T09:06:01Z
                generation: 8
                managedFields:
                  - apiVersion: stackgres.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:configurations:
                          .: {}
                          f:backups: {}
                          f:sgPostgresConfig: {}
                        f:instances: {}
                        f:nonProductionOptions:
                          .: {}
                          f:enableSetPatroniCpuRequests: {}
                          f:enableSetPatroniMemoryRequests: {}
                        f:pods:
                          .: {}
                          f:persistentVolume:
                            .: {}
                            f:size: {}
                          f:scheduling: {}
                        f:postgres:
                          .: {}
                          f:extensions: {}
                          f:ssl:
                            .: {}
                            f:certificateSecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                            f:enabled: {}
                            f:privateKeySecretKeySelector:
                              .: {}
                              f:key: {}
                              f:name: {}
                          f:version: {}
                        f:postgresServices:
                          .: {}
                          f:primary:
                            .: {}
                            f:type: {}
                        f:replication:
                          .: {}
                          f:mode: {}
                          f:syncInstances: {}
                        f:sgInstanceProfile: {}
                      f:status: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:01Z
                  - apiVersion: stackgres.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:status:
                        f:arch: {}
                        f:conditions: {}
                        f:managedSql:
                          f:scripts: {}
                        f:os: {}
                        f:podStatuses: {}
                    manager: fabric8-kubernetes-client
                    operation: Update
                    time: 2023-07-28T09:07:26Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6518"
                uid: 18e4dc68-0e2f-4152-adf9-faf561a8c074
              spec:
                configurations:
                  backups:
                    - cronSchedule: 0 22 * * *
                      path: sgbackups.stackgres.io/vshn-postgresql-postgresql-prod-n97jr/postgresql-prod-n97jr/15
                      retention: 6
                      sgObjectStorage: sgbackup-postgresql-prod-n97jr
                  sgPoolingConfig: generated-from-default-1690535161526
                  sgPostgresConfig: postgresql-prod-n97jr
                instances: 1
                managedSql:
                  scripts:
                    - id: 0
                      sgScript: postgresql-prod-n97jr-default
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: 20Gi
                  scheduling: {}
                postgres:
                  extensions:
                    - name: pg_repack
                      version: 1.4.8
                  flavor: vanilla
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: "15.3"
                postgresServices:
                  primary:
                    enabled: true
                    type: LoadBalancer
                  replicas:
                    enabled: true
                    type: ClusterIP
                replication:
                  mode: async
                  role: ha-read
                  syncInstances: 1
                sgInstanceProfile: postgresql-prod-n97jr
                toInstallPostgresExtensions:
                  - build: "6.20"
                    name: pg_repack
                    postgresVersion: "15"
                    publisher: com.ongres
                    repository: https://extensions.stackgres.io/postgres/repository
                    version: 1.4.8
              status:
                arch: x86_64
                conditions:
                  - lastTransitionTime: 2023-07-28T09:06:02.326012Z
                    reason: FalseFailed
                    status: "False"
                    type: Failed
                  - lastTransitionTime: 2023-07-28T09:06:02.346248Z
                    reason: FalsePendingRestart
                    status: "False"
                    type: PendingRestart
                  - lastTransitionTime: 2023-07-28T09:06:02.346304Z
                    reason: FalsePendingUpgrade
                    status: "False"
                    type: PendingUpgrade
                managedSql:
                  scripts:
                    - completedAt: 2023-07-28T09:07:26.954652Z
                      id: 0
                      scripts:
                        - id: 0
                          version: 0
                      startedAt: 2023-07-28T09:07:26.870002Z
                      updatedAt: 2023-07-28T09:07:26.870014Z
                os: linux
                podStatuses:
                  - installedPostgresExtensions:
                      - build: "6.20"
                        name: pg_repack
                        postgresVersion: "15"
                        publisher: com.ongres
                        repository: https://extensions.stackgres.io/postgres/repository
                        version: 1.4.8
                    name: postgresql-prod-n97jr-0
                    pendingRestart: false
                    primary: true
                    replicationGroup: 0
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:01Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:01Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: postgresql-prod-n97jr-postgresql-master
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-postgresql-master
            crossplane.io/external-create-pending: 2023-07-28T09:05:56Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:57Z
            crossplane.io/external-name: postgresql-prod-n97jr-postgresql-master
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:appcat.io/observe-only: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec: {}
                      f:status:
                        .: {}
                        f:loadBalancer: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:58Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:creationTimestamp: {}
                        f:labels:
                          .: {}
                          f:app: {}
                          f:stackgres.io/cluster: {}
                          f:stackgres.io/cluster-name: {}
                          f:stackgres.io/cluster-scope: {}
                          f:stackgres.io/cluster-uid: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:ownerReferences:
                          .: {}
                          'k:{"uid":"18e4dc68-0e2f-4152-adf9-faf561a8c074"}': {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:allocateLoadBalancerNodePorts: {}
                        f:clusterIP: {}
                        f:clusterIPs: {}
                        f:externalTrafficPolicy: {}
                        f:internalTrafficPolicy: {}
                        f:ipFamilies: {}
                        f:ipFamilyPolicy: {}
                        f:ports: {}
                        f:sessionAffinity: {}
                        f:type: {}
                      f:status:
                        .: {}
                        f:loadBalancer:
                          .: {}
                          f:ingress: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:03Z
          name: postgresql-prod-n97jr-postgresql-master
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5980"
          uid: ea4097d5-5dc5-42e8-9e46-8dafee9409f2
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: Service
              metadata:
                annotations:
                  appcat.io/observe-only: "true"
                  kubectl.kubernetes.io/last-applied-configuration: ""
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec: {}
              status:
                loadBalancer: {}
          managementPolicy: Observe
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              kind: Service
              metadata:
                creationTimestamp: 2023-07-28T09:06:02Z
                labels:
                  app: StackGresCluster
                  stackgres.io/cluster: "true"
                  stackgres.io/cluster-name: postgresql-prod-n97jr
                  stackgres.io/cluster-scope: postgresql-prod-n97jr
                  stackgres.io/cluster-uid: 18e4dc68-0e2f-4152-adf9-faf561a8c074
                managedFields:
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:labels:
                          f:app: {}
                          f:stackgres.io/cluster: {}
                          f:stackgres.io/cluster-name: {}
                          f:stackgres.io/cluster-scope: {}
                          f:stackgres.io/cluster-uid: {}
                        f:ownerReferences:
                          'k:{"uid":"18e4dc68-0e2f-4152-adf9-faf561a8c074"}': {}
                      f:spec:
                        f:ports:
                          'k:{"port":5432,"protocol":"TCP"}':
                            .: {}
                            f:name: {}
                            f:port: {}
                            f:protocol: {}
                            f:targetPort: {}
                          'k:{"port":5433,"protocol":"TCP"}':
                            .: {}
                            f:name: {}
                            f:port: {}
                            f:protocol: {}
                            f:targetPort: {}
                        f:type: {}
                    manager: StackGres
                    operation: Apply
                    time: 2023-07-28T09:06:02Z
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:status:
                        f:loadBalancer:
                          f:ingress: {}
                    manager: controller
                    operation: Update
                    subresource: status
                    time: 2023-07-28T09:06:02Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                ownerReferences:
                  - apiVersion: stackgres.io/v1
                    controller: true
                    kind: SGCluster
                    name: postgresql-prod-n97jr
                    uid: 18e4dc68-0e2f-4152-adf9-faf561a8c074
                resourceVersion: "5941"
                uid: 75821037-e1a9-457b-a7ac-42e6d6e72e4c
              spec:
                allocateLoadBalancerNodePorts: true
                clusterIP: 10.96.21.192
                clusterIPs:
                  - 10.96.21.192
                externalTrafficPolicy: Cluster
                internalTrafficPolicy: Cluster
                ipFamilies:
                  - IPv4
                ipFamilyPolicy: SingleStack
                ports:
                  - name: pgport
                    nodePort: 31978
                    port: 5432
                    protocol: TCP
                    targetPort: pgport
                  - name: pgreplication
                    nodePort: 31441
                    port: 5433
                    protocol: TCP
                    targetPort: pgreplication
                sessionAffinity: None
                type: LoadBalancer
              status:
                loadBalancer:
                  ingress:
                    - ip: 172.18.0.200
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:03Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:58Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: sg-backup
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: sg-backup
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:59Z
            crossplane.io/external-name: postgresql-prod-n97jr-object-storage
          creationTimestamp: 2023-07-28T09:05:56Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:s3Compatible:
                          .: {}
                          f:awsCredentials:
                            .: {}
                            f:secretKeySelectors:
                              .: {}
                              f:accessKeyId:
                                .: {}
                                f:key: {}
                                f:name: {}
                              f:secretAccessKey:
                                .: {}
                                f:key: {}
                                f:name: {}
                          f:bucket: {}
                          f:enablePathStyleAddressing: {}
                          f:endpoint: {}
                          f:region: {}
                        f:type: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:56Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:stackgres.io/operatorVersion: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:s3Compatible:
                          .: {}
                          f:awsCredentials:
                            .: {}
                            f:secretKeySelectors:
                              .: {}
                              f:accessKeyId:
                                .: {}
                                f:key: {}
                                f:name: {}
                              f:secretAccessKey:
                                .: {}
                                f:key: {}
                                f:name: {}
                          f:bucket: {}
                          f:enablePathStyleAddressing: {}
                          f:endpoint: {}
                          f:region: {}
                        f:type: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
          name: postgresql-prod-n97jr-object-storage
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5855"
          uid: 1b6e3931-14f2-4595-8c28-fe8734450e3c
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1beta1
              kind: SGObjectStorage
              metadata:
                name: sgbackup-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                s3Compatible:
                  awsCredentials:
                    secretKeySelectors:
                      accessKeyId:
                        key: AWS_ACCESS_KEY_ID
                        name: pgbucket-postgresql-prod-n97jr
                      secretAccessKey:
                        key: AWS_SECRET_ACCESS_KEY
                        name: pgbucket-postgresql-prod-n97jr
                  bucket: postgresql-prod-n97jr
                  enablePathStyleAddressing: true
                  endpoint: http://minio-server.minio:9000
                  region: us-east-1
                type: s3Compatible
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1beta1
              kind: SGObjectStorage
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"stackgres.io/v1beta1","kind":"SGObjectStorage","metadata":{"name":"sgbackup-postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"s3Compatible":{"awsCredentials":{"secretKeySelectors":{"accessKeyId":{"key":"AWS_ACCESS_KEY_ID","name":"pgbucket-postgresql-prod-n97jr"},"secretAccessKey":{"key":"AWS_SECRET_ACCESS_KEY","name":"pgbucket-postgresql-prod-n97jr"}}},"bucket":"postgresql-prod-n97jr","enablePathStyleAddressing":true,"endpoint":"http://minio-server.minio:9000","region":"us-east-1"},"type":"s3Compatible"}}'
                  stackgres.io/operatorVersion: 1.5.0
                creationTimestamp: 2023-07-28T09:05:59Z
                generation: 1
                managedFields:
                  - apiVersion: stackgres.io/v1beta1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:s3Compatible:
                          .: {}
                          f:awsCredentials:
                            .: {}
                            f:secretKeySelectors:
                              .: {}
                              f:accessKeyId:
                                .: {}
                                f:key: {}
                                f:name: {}
                              f:secretAccessKey:
                                .: {}
                                f:key: {}
                                f:name: {}
                          f:bucket: {}
                          f:enablePathStyleAddressing: {}
                          f:endpoint: {}
                          f:region: {}
                        f:type: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:59Z
                name: sgbackup-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5808"
                uid: e806540f-7cc8-4eb7-abd8-2bfeefcc299b
              spec:
                s3Compatible:
                  awsCredentials:
                    secretKeySelectors:
                      accessKeyId:
                        key: AWS_ACCESS_KEY_ID
                        name: pgbucket-postgresql-prod-n97jr
                      secretAccessKey:
                        key: AWS_SECRET_ACCESS_KEY
                        name: pgbucket-postgresql-prod-n97jr
                  bucket: postgresql-prod-n97jr
                  enablePathStyleAddressing: true
                  endpoint: http://minio-server.minio:9000
                  region: us-east-1
                type: s3Compatible
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:00Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: postgresql-prod-n97jr-maintenance-serviceaccount
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-maintenance-serviceaccount
            crossplane.io/external-create-pending: 2023-07-28T09:06:11Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:11Z
            crossplane.io/external-name: postgresql-prod-n97jr-maintenance-serviceaccount
          creationTimestamp: 2023-07-28T09:06:10Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:10Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:11Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:12Z
          name: postgresql-prod-n97jr-maintenance-serviceaccount
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6128"
          uid: 3b26eed4-ade3-4aff-8e17-ce62adedf1ba
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: maintenanceserviceaccount
                namespace: vshn-postgresql-postgresql-prod-n97jr
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"maintenanceserviceaccount","namespace":"vshn-postgresql-postgresql-prod-n97jr"}}'
                creationTimestamp: 2023-07-28T09:06:11Z
                managedFields:
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:11Z
                name: maintenanceserviceaccount
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6097"
                uid: d82ae4aa-bb3b-4099-b934-2dd2512c8c57
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:11Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: pg-conf
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: pg-conf
            crossplane.io/external-create-failed: 2023-07-28T09:05:56Z
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:59Z
            crossplane.io/external-name: postgresql-prod-n97jr-pgconf
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 25
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:stackgres.io/operatorVersion: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:postgresVersion: {}
                        f:postgresql.conf:
                          .: {}
                          f:autovacuum_max_workers: {}
                          f:autovacuum_vacuum_cost_delay: {}
                          f:autovacuum_work_mem: {}
                          f:checkpoint_completion_target: {}
                          f:checkpoint_timeout: {}
                          f:default_statistics_target: {}
                          f:default_toast_compression: {}
                          f:enable_partitionwise_aggregate: {}
                          f:enable_partitionwise_join: {}
                          f:huge_pages: {}
                          f:jit_inline_above_cost: {}
                          f:log_autovacuum_min_duration: {}
                          f:log_checkpoints: {}
                          f:log_connections: {}
                          f:log_disconnections: {}
                          f:log_line_prefix: {}
                          f:log_lock_waits: {}
                          f:log_min_duration_statement: {}
                          f:log_statement: {}
                          f:log_temp_files: {}
                          f:maintenance_work_mem: {}
                          f:max_locks_per_transaction: {}
                          f:max_pred_locks_per_transaction: {}
                          f:max_prepared_transactions: {}
                          f:max_replication_slots: {}
                          f:max_wal_senders: {}
                          f:max_wal_size: {}
                          f:min_wal_size: {}
                          f:pg_stat_statements.track_utility: {}
                          f:random_page_cost: {}
                          f:shared_preload_libraries: {}
                          f:superuser_reserved_connections: {}
                          f:track_activity_query_size: {}
                          f:track_functions: {}
                          f:track_io_timing: {}
                          f:wal_keep_size: {}
                          f:work_mem: {}
                      f:status:
                        .: {}
                        f:defaultParameters:
                          .: {}
                          f:archive_command: {}
                          f:archive_mode: {}
                          f:autovacuum_max_workers: {}
                          f:autovacuum_vacuum_cost_delay: {}
                          f:autovacuum_work_mem: {}
                          f:checkpoint_completion_target: {}
                          f:checkpoint_timeout: {}
                          f:default_statistics_target: {}
                          f:default_toast_compression: {}
                          f:enable_partitionwise_aggregate: {}
                          f:enable_partitionwise_join: {}
                          f:fsync: {}
                          f:hot_standby: {}
                          f:huge_pages: {}
                          f:jit_inline_above_cost: {}
                          f:lc_messages: {}
                          f:listen_addresses: {}
                          f:log_autovacuum_min_duration: {}
                          f:log_checkpoints: {}
                          f:log_connections: {}
                          f:log_destination: {}
                          f:log_directory: {}
                          f:log_disconnections: {}
                          f:log_filename: {}
                          f:log_line_prefix: {}
                          f:log_lock_waits: {}
                          f:log_min_duration_statement: {}
                          f:log_rotation_age: {}
                          f:log_rotation_size: {}
                          f:log_statement: {}
                          f:log_temp_files: {}
                          f:log_truncate_on_rotation: {}
                          f:logging_collector: {}
                          f:maintenance_work_mem: {}
                          f:max_locks_per_transaction: {}
                          f:max_pred_locks_per_transaction: {}
                          f:max_prepared_transactions: {}
                          f:max_replication_slots: {}
                          f:max_wal_senders: {}
                          f:max_wal_size: {}
                          f:min_wal_size: {}
                          f:pg_stat_statements.track_utility: {}
                          f:random_page_cost: {}
                          f:shared_preload_libraries: {}
                          f:superuser_reserved_connections: {}
                          f:track_activity_query_size: {}
                          f:track_commit_timestamp: {}
                          f:track_functions: {}
                          f:track_io_timing: {}
                          f:wal_compression: {}
                          f:wal_keep_size: {}
                          f:wal_level: {}
                          f:wal_log_hints: {}
                          f:work_mem: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:stackgres.io/operatorVersion: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:postgresVersion: {}
                        f:postgresql.conf:
                          .: {}
                          f:autovacuum_max_workers: {}
                          f:autovacuum_vacuum_cost_delay: {}
                          f:autovacuum_work_mem: {}
                          f:checkpoint_completion_target: {}
                          f:checkpoint_timeout: {}
                          f:default_statistics_target: {}
                          f:default_toast_compression: {}
                          f:enable_partitionwise_aggregate: {}
                          f:enable_partitionwise_join: {}
                          f:huge_pages: {}
                          f:jit_inline_above_cost: {}
                          f:log_autovacuum_min_duration: {}
                          f:log_checkpoints: {}
                          f:log_connections: {}
                          f:log_disconnections: {}
                          f:log_line_prefix: {}
                          f:log_lock_waits: {}
                          f:log_min_duration_statement: {}
                          f:log_statement: {}
                          f:log_temp_files: {}
                          f:maintenance_work_mem: {}
                          f:max_locks_per_transaction: {}
                          f:max_pred_locks_per_transaction: {}
                          f:max_prepared_transactions: {}
                          f:max_replication_slots: {}
                          f:max_wal_senders: {}
                          f:max_wal_size: {}
                          f:min_wal_size: {}
                          f:pg_stat_statements.track_utility: {}
                          f:random_page_cost: {}
                          f:shared_preload_libraries: {}
                          f:superuser_reserved_connections: {}
                          f:track_activity_query_size: {}
                          f:track_functions: {}
                          f:track_io_timing: {}
                          f:wal_keep_size: {}
                          f:work_mem: {}
                      f:status: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:10Z
          name: postgresql-prod-n97jr-pgconf
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "57736"
          uid: 79accbef-2e24-4cd5-921d-43cf0b5b419a
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGPostgresConfig
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: ""
                  stackgres.io/operatorVersion: 1.5.0
                creationTimestamp: 2023-07-28T09:05:59Z
                generation: 1
                managedFields:
                  - apiVersion: stackgres.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:postgresVersion: {}
                        f:postgresql.conf: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "57271"
                uid: 3ff259e9-415b-46d5-ab7a-3534fa0eb3d0
              spec:
                postgresVersion: "15"
                postgresql.conf:
                  autovacuum_max_workers: "3"
                  autovacuum_vacuum_cost_delay: 2ms
                  autovacuum_work_mem: 512MB
                  checkpoint_completion_target: "0.9"
                  checkpoint_timeout: 15min
                  default_statistics_target: "200"
                  default_toast_compression: lz4
                  enable_partitionwise_aggregate: on
                  enable_partitionwise_join: on
                  huge_pages: off
                  jit_inline_above_cost: "-1"
                  log_autovacuum_min_duration: 0ms
                  log_checkpoints: on
                  log_connections: on
                  log_disconnections: on
                  log_line_prefix: "%t [%p]: db=%d,user=%u,app=%a,client=%h "
                  log_lock_waits: on
                  log_min_duration_statement: 1s
                  log_statement: none
                  log_temp_files: 0kB
                  maintenance_work_mem: 2GB
                  max_locks_per_transaction: "128"
                  max_pred_locks_per_transaction: "128"
                  max_prepared_transactions: "32"
                  max_replication_slots: "20"
                  max_wal_senders: "20"
                  max_wal_size: 2GB
                  min_wal_size: 1GB
                  pg_stat_statements.track_utility: off
                  random_page_cost: "1.5"
                  shared_preload_libraries: pg_stat_statements, auto_explain
                  superuser_reserved_connections: "8"
                  track_activity_query_size: 4kB
                  track_functions: pl
                  track_io_timing: on
                  wal_keep_size: 1536MB
                  work_mem: 10MB
              status: {}
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGPostgresConfig
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"stackgres.io/v1","kind":"SGPostgresConfig","metadata":{"annotations":{"kubectl.kubernetes.io/last-applied-configuration":"","stackgres.io/operatorVersion":"1.5.0"},"creationTimestamp":"2023-07-28T09:05:59Z","generation":1,"managedFields":[{"apiVersion":"stackgres.io/v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}}},"f:spec":{".":{},"f:postgresVersion":{},"f:postgresql.conf":{}}},"manager":"crossplane-kubernetes-provider","operation":"Update","time":"2023-07-28T09:05:58Z"}],"name":"postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr","resourceVersion":"57271","uid":"3ff259e9-415b-46d5-ab7a-3534fa0eb3d0"},"spec":{"postgresVersion":"15","postgresql.conf":{"autovacuum_max_workers":"3","autovacuum_vacuum_cost_delay":"2ms","autovacuum_work_mem":"512MB","checkpoint_completion_target":"0.9","checkpoint_timeout":"15min","default_statistics_target":"200","default_toast_compression":"lz4","enable_partitionwise_aggregate":"on","enable_partitionwise_join":"on","huge_pages":"off","jit_inline_above_cost":"-1","log_autovacuum_min_duration":"0ms","log_checkpoints":"on","log_connections":"on","log_disconnections":"on","log_line_prefix":"%t
                    [%p]: db=%d,user=%u,app=%a,client=%h
                    ","log_lock_waits":"on","log_min_duration_statement":"1s","log_statement":"none","log_temp_files":"0kB","maintenance_work_mem":"2GB","max_locks_per_transaction":"128","max_pred_locks_per_transaction":"128","max_prepared_transactions":"32","max_replication_slots":"20","max_wal_senders":"20","max_wal_size":"2GB","min_wal_size":"1GB","pg_stat_statements.track_utility":"off","random_page_cost":"1.5","shared_preload_libraries":"pg_stat_statements,
                    auto_explain","superuser_reserved_connections":"8","track_activity_query_size":"4kB","track_functions":"pl","track_io_timing":"on","wal_keep_size":"1536MB","work_mem":"10MB"}},"status":{}}'
                  stackgres.io/operatorVersion: 1.5.0
                creationTimestamp: 2023-07-28T09:05:59Z
                generation: 1
                managedFields:
                  - apiVersion: stackgres.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:postgresVersion: {}
                        f:postgresql.conf: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "57734"
                uid: 3ff259e9-415b-46d5-ab7a-3534fa0eb3d0
              spec:
                postgresVersion: "15"
                postgresql.conf:
                  autovacuum_max_workers: "3"
                  autovacuum_vacuum_cost_delay: 2ms
                  autovacuum_work_mem: 512MB
                  checkpoint_completion_target: "0.9"
                  checkpoint_timeout: 15min
                  default_statistics_target: "200"
                  default_toast_compression: lz4
                  enable_partitionwise_aggregate: on
                  enable_partitionwise_join: on
                  huge_pages: off
                  jit_inline_above_cost: "-1"
                  log_autovacuum_min_duration: 0ms
                  log_checkpoints: on
                  log_connections: on
                  log_disconnections: on
                  log_line_prefix: "%t [%p]: db=%d,user=%u,app=%a,client=%h "
                  log_lock_waits: on
                  log_min_duration_statement: 1s
                  log_statement: none
                  log_temp_files: 0kB
                  maintenance_work_mem: 2GB
                  max_locks_per_transaction: "128"
                  max_pred_locks_per_transaction: "128"
                  max_prepared_transactions: "32"
                  max_replication_slots: "20"
                  max_wal_senders: "20"
                  max_wal_size: 2GB
                  min_wal_size: 1GB
                  pg_stat_statements.track_utility: off
                  random_page_cost: "1.5"
                  shared_preload_libraries: pg_stat_statements, auto_explain
                  superuser_reserved_connections: "8"
                  track_activity_query_size: 4kB
                  track_functions: pl
                  track_io_timing: on
                  wal_keep_size: 1536MB
                  work_mem: 10MB
              status:
                defaultParameters:
                  archive_command: /bin/true
                  archive_mode: on
                  autovacuum_max_workers: "3"
                  autovacuum_vacuum_cost_delay: "2"
                  autovacuum_work_mem: 512MB
                  checkpoint_completion_target: "0.9"
                  checkpoint_timeout: 15min
                  default_statistics_target: "200"
                  default_toast_compression: lz4
                  enable_partitionwise_aggregate: on
                  enable_partitionwise_join: on
                  fsync: on
                  hot_standby: on
                  huge_pages: off
                  jit_inline_above_cost: "-1"
                  lc_messages: C
                  listen_addresses: localhost
                  log_autovacuum_min_duration: 0ms
                  log_checkpoints: on
                  log_connections: on
                  log_destination: stderr
                  log_directory: log
                  log_disconnections: on
                  log_filename: postgres-%M.log
                  log_line_prefix: "%t [%p]: db=%d,user=%u,app=%a,client=%h "
                  log_lock_waits: on
                  log_min_duration_statement: "1000"
                  log_rotation_age: 30min
                  log_rotation_size: 0kB
                  log_statement: none
                  log_temp_files: "0"
                  log_truncate_on_rotation: on
                  logging_collector: off
                  maintenance_work_mem: 2GB
                  max_locks_per_transaction: "128"
                  max_pred_locks_per_transaction: "128"
                  max_prepared_transactions: "32"
                  max_replication_slots: "20"
                  max_wal_senders: "20"
                  max_wal_size: 2GB
                  min_wal_size: 1GB
                  pg_stat_statements.track_utility: off
                  random_page_cost: "1.5"
                  shared_preload_libraries: pg_stat_statements, auto_explain
                  superuser_reserved_connections: "8"
                  track_activity_query_size: "4096"
                  track_commit_timestamp: on
                  track_functions: pl
                  track_io_timing: on
                  wal_compression: on
                  wal_keep_size: 1536MB
                  wal_level: logical
                  wal_log_hints: on
                  work_mem: 10MB
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:00Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: podmonitor
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: podmonitor
            crossplane.io/external-create-failed: 2023-07-28T09:05:56Z
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:58Z
            crossplane.io/external-name: postgresql-prod-n97jr-podmonitor
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:namespaceSelector:
                          .: {}
                          f:matchNames: {}
                        f:podMetricsEndpoints: {}
                        f:selector:
                          .: {}
                          f:matchLabels:
                            .: {}
                            f:app: {}
                            f:stackgres.io/cluster-name: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:namespaceSelector:
                          .: {}
                          f:matchNames: {}
                        f:podMetricsEndpoints: {}
                        f:selector:
                          .: {}
                          f:matchLabels:
                            .: {}
                            f:app: {}
                            f:stackgres.io/cluster-name: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
          name: postgresql-prod-n97jr-podmonitor
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5843"
          uid: ca0513c2-5677-4faf-9840-02e0f1fa1eae
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PodMonitor
              metadata:
                name: postgresql-podmonitor
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                namespaceSelector:
                  matchNames:
                    - vshn-postgresql-postgresql-prod-n97jr
                podMetricsEndpoints:
                  - port: pgexporter
                selector:
                  matchLabels:
                    app: StackGresCluster
                    stackgres.io/cluster-name: postgresql-prod-n97jr
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PodMonitor
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"monitoring.coreos.com/v1","kind":"PodMonitor","metadata":{"name":"postgresql-podmonitor","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"namespaceSelector":{"matchNames":["vshn-postgresql-postgresql-prod-n97jr"]},"podMetricsEndpoints":[{"port":"pgexporter"}],"selector":{"matchLabels":{"app":"StackGresCluster","stackgres.io/cluster-name":"postgresql-prod-n97jr"}}}}'
                creationTimestamp: 2023-07-28T09:05:58Z
                generation: 1
                managedFields:
                  - apiVersion: monitoring.coreos.com/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:namespaceSelector:
                          .: {}
                          f:matchNames: {}
                        f:podMetricsEndpoints: {}
                        f:selector: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: postgresql-podmonitor
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5778"
                uid: 439d2dd0-0347-4c27-bcef-2392df6a8fe1
              spec:
                namespaceSelector:
                  matchNames:
                    - vshn-postgresql-postgresql-prod-n97jr
                podMetricsEndpoints:
                  - port: pgexporter
                selector:
                  matchLabels:
                    app: StackGresCluster
                    stackgres.io/cluster-name: postgresql-prod-n97jr
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: profile
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: profile
            crossplane.io/external-create-pending: 2023-07-28T09:05:56Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:57Z
            crossplane.io/external-name: postgresql-prod-n97jr-profile
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 2
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:containers:
                          .: {}
                          f:backup.create-backup:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:cluster-controller:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.run-dbops:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-result:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:envoy:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:postgres-util:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:prometheus-postgres-exporter:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:cpu: {}
                        f:initContainers:
                          .: {}
                          f:cluster-reconciliation-cycle:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-running:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer-auth-file:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:relocate-binaries:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-arbitrary-user:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-scripts:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:memory: {}
                        f:requests: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:57Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:stackgres.io/operatorVersion: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:containers:
                          .: {}
                          f:backup.create-backup:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:cluster-controller:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.run-dbops:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-result:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:distributedlogs-controller:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:envoy:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:fluent-bit:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:fluentd:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:postgres-util:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:prometheus-postgres-exporter:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:cpu: {}
                        f:initContainers:
                          .: {}
                          f:cluster-reconciliation-cycle:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-running:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:distributedlogs-reconciliation-cycle:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:major-version-upgrade:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer-auth-file:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:relocate-binaries:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:reset-patroni:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-arbitrary-user:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-scripts:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:memory: {}
                        f:requests: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:05:59Z
          name: postgresql-prod-n97jr-profile
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6088"
          uid: 6a01ae9e-03ff-4055-a369-31f0ce7c4e71
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGInstanceProfile
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                containers:
                  backup.create-backup:
                    cpu: 250m
                    memory: 256Mi
                  cluster-controller:
                    cpu: 32m
                    memory: 188Mi
                  dbops.run-dbops:
                    cpu: 250m
                    memory: 256Mi
                  dbops.set-dbops-result:
                    cpu: 250m
                    memory: 256Mi
                  envoy:
                    cpu: 32m
                    memory: 64Mi
                  pgbouncer:
                    cpu: 16m
                    memory: 32Mi
                  postgres-util:
                    cpu: 10m
                    memory: 4Mi
                  prometheus-postgres-exporter:
                    cpu: 10m
                    memory: 32Mi
                cpu: 400m
                initContainers:
                  cluster-reconciliation-cycle:
                    cpu: 100m
                    memory: 100Mi
                  dbops.set-dbops-running:
                    cpu: 250m
                    memory: 256Mi
                  pgbouncer-auth-file:
                    cpu: 100m
                    memory: 100Mi
                  relocate-binaries:
                    cpu: 100m
                    memory: 100Mi
                  setup-arbitrary-user:
                    cpu: 100m
                    memory: 100Mi
                  setup-scripts:
                    cpu: 100m
                    memory: 100Mi
                memory: 1728Mi
                requests: {}
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGInstanceProfile
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"stackgres.io/v1","kind":"SGInstanceProfile","metadata":{"name":"postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"containers":{"backup.create-backup":{"cpu":"250m","memory":"256Mi"},"cluster-controller":{"cpu":"32m","memory":"188Mi"},"dbops.run-dbops":{"cpu":"250m","memory":"256Mi"},"dbops.set-dbops-result":{"cpu":"250m","memory":"256Mi"},"envoy":{"cpu":"32m","memory":"64Mi"},"pgbouncer":{"cpu":"16m","memory":"32Mi"},"postgres-util":{"cpu":"10m","memory":"4Mi"},"prometheus-postgres-exporter":{"cpu":"10m","memory":"32Mi"}},"cpu":"400m","initContainers":{"cluster-reconciliation-cycle":{"cpu":"100m","memory":"100Mi"},"dbops.set-dbops-running":{"cpu":"250m","memory":"256Mi"},"pgbouncer-auth-file":{"cpu":"100m","memory":"100Mi"},"relocate-binaries":{"cpu":"100m","memory":"100Mi"},"setup-arbitrary-user":{"cpu":"100m","memory":"100Mi"},"setup-scripts":{"cpu":"100m","memory":"100Mi"}},"memory":"1728Mi","requests":{}}}'
                  stackgres.io/operatorVersion: 1.5.0
                creationTimestamp: 2023-07-28T09:05:57Z
                generation: 1
                managedFields:
                  - apiVersion: stackgres.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:containers:
                          .: {}
                          f:backup.create-backup:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:cluster-controller:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.run-dbops:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-result:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:envoy:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:postgres-util:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:prometheus-postgres-exporter:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:cpu: {}
                        f:initContainers:
                          .: {}
                          f:cluster-reconciliation-cycle:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:dbops.set-dbops-running:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:pgbouncer-auth-file:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:relocate-binaries:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-arbitrary-user:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                          f:setup-scripts:
                            .: {}
                            f:cpu: {}
                            f:memory: {}
                        f:memory: {}
                        f:requests: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:57Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6073"
                uid: 59304858-1215-4f22-a071-cfc5f99d915e
              spec:
                containers:
                  backup.create-backup:
                    cpu: 250m
                    memory: 256Mi
                  cluster-controller:
                    cpu: 32m
                    memory: 188Mi
                  dbops.run-dbops:
                    cpu: 250m
                    memory: 256Mi
                  dbops.set-dbops-result:
                    cpu: 250m
                    memory: 256Mi
                  distributedlogs-controller:
                    cpu: 250m
                    memory: 512Mi
                  envoy:
                    cpu: 32m
                    memory: 64Mi
                  fluent-bit:
                    cpu: 25m
                    memory: 64Mi
                  fluentd:
                    cpu: 250m
                    memory: 2Gi
                  pgbouncer:
                    cpu: 16m
                    memory: 32Mi
                  postgres-util:
                    cpu: 10m
                    memory: 4Mi
                  prometheus-postgres-exporter:
                    cpu: 10m
                    memory: 32Mi
                cpu: 400m
                initContainers:
                  cluster-reconciliation-cycle:
                    cpu: 100m
                    memory: 100Mi
                  dbops.set-dbops-running:
                    cpu: 250m
                    memory: 256Mi
                  distributedlogs-reconciliation-cycle:
                    cpu: 400m
                    memory: 1728Mi
                  major-version-upgrade:
                    cpu: 400m
                    memory: 1728Mi
                  pgbouncer-auth-file:
                    cpu: 100m
                    memory: 100Mi
                  relocate-binaries:
                    cpu: 100m
                    memory: 100Mi
                  reset-patroni:
                    cpu: 400m
                    memory: 1728Mi
                  setup-arbitrary-user:
                    cpu: 100m
                    memory: 100Mi
                  setup-scripts:
                    cpu: 100m
                    memory: 100Mi
                memory: 1728Mi
                requests: {}
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:58Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:57Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: ns-observer
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: ns-observer
            crossplane.io/external-name: ns-observer-postgresql-prod-n97jr
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:labels:
                          .: {}
                          f:appcat.vshn.io/claim-namespace: {}
                          f:appcat.vshn.io/servicename: {}
                          f:appuio.io/billing-name: {}
                          f:appuio.io/no-rbac-creation: {}
                          f:appuio.io/organization: {}
                        f:name: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:57Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:labels:
                          .: {}
                          f:kubernetes.io/metadata.name: {}
                          f:name: {}
                        f:managedFields: {}
                        f:name: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:finalizers: {}
                      f:status:
                        .: {}
                        f:phase: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:05:58Z
          name: ns-observer-postgresql-prod-n97jr
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5792"
          uid: 135b093d-fe45-46d5-8484-b29e540af4a4
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                labels:
                  appcat.vshn.io/claim-namespace: ""
                  appcat.vshn.io/servicename: postgresql-standalone
                  appuio.io/billing-name: appcat-postgresql
                  appuio.io/no-rbac-creation: "true"
                  appuio.io/organization: vshn
                name: app1-prod
          managementPolicy: Observe
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: >
                    {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"labels":{"name":"app1-prod"},"name":"app1-prod"}}
                creationTimestamp: 2023-07-28T09:05:53Z
                labels:
                  kubernetes.io/metadata.name: app1-prod
                  name: app1-prod
                managedFields:
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:labels:
                          .: {}
                          f:kubernetes.io/metadata.name: {}
                          f:name: {}
                    manager: kubectl-client-side-apply
                    operation: Update
                    time: 2023-07-28T09:05:53Z
                name: app1-prod
                resourceVersion: "5532"
                uid: e1f8c32a-5f04-43ec-bb9a-babb283c509e
              spec:
                finalizers:
                  - kubernetes
              status:
                phase: Active
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:57Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
            - lastTransitionTime: 2023-07-28T09:05:58Z
              reason: Available
              status: "True"
              type: Ready
      connectionDetails: []
    - name: certificate
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: certificate
            crossplane.io/external-create-pending: 2023-07-28T09:05:57Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:57Z
            crossplane.io/external-name: postgresql-prod-n97jr-certificate
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:dnsNames: {}
                        f:duration: {}
                        f:isCA: {}
                        f:issuerRef:
                          .: {}
                          f:group: {}
                          f:kind: {}
                          f:name: {}
                        f:privateKey:
                          .: {}
                          f:algorithm: {}
                          f:encoding: {}
                          f:size: {}
                        f:renewBefore: {}
                        f:secretName: {}
                        f:subject:
                          .: {}
                          f:organizations: {}
                        f:usages: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:58Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:dnsNames: {}
                        f:duration: {}
                        f:issuerRef:
                          .: {}
                          f:group: {}
                          f:kind: {}
                          f:name: {}
                        f:privateKey:
                          .: {}
                          f:algorithm: {}
                          f:encoding: {}
                          f:size: {}
                        f:renewBefore: {}
                        f:secretName: {}
                        f:subject:
                          .: {}
                          f:organizations: {}
                        f:usages: {}
                      f:status:
                        .: {}
                        f:conditions: {}
                        f:notAfter: {}
                        f:notBefore: {}
                        f:renewalTime: {}
                        f:revision: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:59Z
          name: postgresql-prod-n97jr-certificate
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6385"
          uid: 86e0e14a-773c-4e45-98a3-3380a3a7006e
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Certificate
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                dnsNames:
                  - vshn.appcat.vshn.ch
                duration: 87600h
                isCA: false
                issuerRef:
                  group: cert-manager.io
                  kind: Issuer
                  name: postgresql-prod-n97jr
                privateKey:
                  
                  encoding: PKCS1
                  size: 4096
                renewBefore: 2400h
                secretName: tls-certificate
                subject:
                  organizations:
                    - vshn-appcat
                usages:
                  - server auth
                  - client auth
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Certificate
              metadata:
                annotations:
                  
                    auth","client auth"]}}'
                creationTimestamp: 2023-07-28T09:05:57Z
                generation: 1
                managedFields:
                  - apiVersion: cert-manager.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:dnsNames: {}
                        f:duration: {}
                        f:isCA: {}
                        f:issuerRef:
                          .: {}
                          f:group: {}
                          f:kind: {}
                          f:name: {}
                        f:privateKey:
                          .: {}
                          f:algorithm: {}
                          f:encoding: {}
                          f:size: {}
                        f:renewBefore: {}
                        f:secretName: {}
                        f:subject:
                          .: {}
                          f:organizations: {}
                        f:usages: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:57Z
                  - apiVersion: cert-manager.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:status:
                        f:revision: {}
                    manager: cert-manager-certificates-issuing
                    operation: Update
                    subresource: status
                    time: 2023-07-28T09:06:00Z
                  - apiVersion: cert-manager.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:status:
                        .: {}
                        f:conditions:
                          .: {}
                          'k:{"type":"Ready"}':
                            .: {}
                            f:lastTransitionTime: {}
                            f:message: {}
                            f:observedGeneration: {}
                            f:reason: {}
                            f:status: {}
                            f:type: {}
                        f:notAfter: {}
                        f:notBefore: {}
                        f:renewalTime: {}
                    manager: cert-manager-certificates-readiness
                    operation: Update
                    subresource: status
                    time: 2023-07-28T09:06:00Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5886"
                uid: 590c5ac4-bf7d-47f8-b869-cb47073f90b8
              spec:
                dnsNames:
                  - vshn.appcat.vshn.ch
                duration: 87600h0m0s
                issuerRef:
                  group: cert-manager.io
                  kind: Issuer
                  name: postgresql-prod-n97jr
                privateKey:
                  
                  encoding: PKCS1
                  size: 4096
                renewBefore: 2400h0m0s
                secretName: tls-certificate
                subject:
                  organizations:
                    - vshn-appcat
                usages:
                  - server auth
                  - client auth
              status:
                conditions:
                  - lastTransitionTime: 2023-07-28T09:06:00Z
                    message: Certificate is up to date and has not expired
                    observedGeneration: 1
                    reason: Ready
                    status: "True"
                    type: Ready
                notAfter: 2033-07-25T09:06:00Z
                notBefore: 2023-07-28T09:06:00Z
                renewalTime: 2033-04-16T09:06:00Z
                revision: 1
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:58Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: local-ca
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: local-ca
            crossplane.io/external-create-failed: 2023-07-28T09:05:56Z
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:58Z
            crossplane.io/external-name: postgresql-prod-n97jr-localca
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:selfSigned:
                          .: {}
                          f:crlDistributionPoints: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:selfSigned: {}
                      f:status:
                        .: {}
                        f:conditions: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
          name: postgresql-prod-n97jr-localca
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5847"
          uid: 13682ca8-71fd-4380-a356-5fa6b39946a6
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Issuer
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                selfSigned:
                  crlDistributionPoints: []
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Issuer
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"cert-manager.io/v1","kind":"Issuer","metadata":{"name":"postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"selfSigned":{"crlDistributionPoints":[]}}}'
                creationTimestamp: 2023-07-28T09:05:58Z
                generation: 1
                managedFields:
                  - apiVersion: cert-manager.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:status:
                        .: {}
                        f:conditions:
                          .: {}
                          'k:{"type":"Ready"}':
                            .: {}
                            f:lastTransitionTime: {}
                            f:observedGeneration: {}
                            f:reason: {}
                            f:status: {}
                            f:type: {}
                    manager: cert-manager-issuers
                    operation: Update
                    subresource: status
                    time: 2023-07-28T09:05:58Z
                  - apiVersion: cert-manager.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:selfSigned:
                          .: {}
                          f:crlDistributionPoints: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5790"
                uid: 5e3ca450-d46d-475b-b441-1d32f8724b1f
              spec:
                selfSigned: {}
              status:
                conditions:
                  - lastTransitionTime: 2023-07-28T09:05:58Z
                    observedGeneration: 1
                    reason: IsReady
                    status: "True"
                    type: Ready
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: prometheusrule
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: prometheusrule
            crossplane.io/external-create-failed: 2023-07-28T09:05:56Z
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:58Z
            crossplane.io/external-name: postgresql-prod-n97jr-prometheusrule
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:groups: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                          f:prometheus-operator-validated: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:groups: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
          name: postgresql-prod-n97jr-prometheusrule
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5845"
          uid: ac5d9927-25b4-4413-b11c-e8b183278c4d
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PrometheusRule
              metadata:
                name: postgresql-rules
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                groups:
                  - name: postgresql-storage
                    rules:
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: The volume claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            is only {{ $value | humanizePercentage }} free.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.03 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1m
                        labels:
                          severity: critical
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: Based on recent sampling, the volume claimed by the instance {{
                            $labels.name }} in namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} is
                            expected to fill up within four days. Currently {{
                            $value | humanizePercentage }} is available.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.15 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 and
                          predict_linear(kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"}[6h], 4 * 24 * 3600) <
                          0  unless on(namespace, persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1h
                        labels:
                          severity: warning
                  - name: postgresql-memory
                    rules:
                      - alert: PostgreSQLMemoryCritical
                        annotations:
                          description: >-
                            The memory claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            has been over 85% for 2 hours.
                              Please reducde the load of this instance, or increase the memory.
                          summary: Memory usage critical
                        expr: label_replace( topk(1,
                          (container_memory_working_set_bytes{container="patroni"}  /
                          on(container,pod,namespace)  kube_pod_container_resource_limits{resource="memory"}
                          * 100) > 85) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
                  - name: postgresql-connections
                    rules:
                      - alert: PostgreSQLConnectionsCritical
                        annotations:
                          description: >-
                            The number of connections to the instance {{ $labels.name }} in
                            namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} have
                            been over 90% of the configured connections for 2
                            hours.
                              Please reduce the load of this instance.
                          summary: Connection usage critical
                        expr: label_replace( topk(1, sum(pg_stat_activity_count) by (pod, namespace) >
                          90/100 * sum(pg_settings_max_connections) by (pod,
                          namespace)) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PrometheusRule
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"monitoring.coreos.com/v1","kind":"PrometheusRule","metadata":{"name":"postgresql-rules","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"groups":[{"name":"postgresql-storage","rules":[{"alert":"PostgreSQLPersistentVolumeFillingUp","annotations":{"description":"The
                    volume claimed by the instance {{ $labels.name }} in
                    namespace {{ $labels.label_appcat_vshn_io_claim_namespace }}
                    is only {{ $value | humanizePercentage }}
                    free.","runbook_url":"https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup","summary":"PersistentVolume
                    is filling up."},"expr":"label_replace( bottomk(1,
                    (kubelet_volume_stats_available_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"} /
                    kubelet_volume_stats_capacity_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"}) \u003c 0.03 and
                    kubelet_volume_stats_used_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"} \u003e 0 unless on(namespace,
                    persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{
                    access_mode=\"ReadOnlyMany\"} == 1 unless on(namespace,
                    persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"}
                    == 1) * on(namespace)
                    group_left(label_appcat_vshn_io_claim_namespace)
                    kube_namespace_labels, \"name\", \"$1\", \"namespace\",
                    \"vshn-postgresql-(.+)-.+\")","for":"1m","labels":{"severity":"critical"}},{"alert":"PostgreSQLPersistentVolumeFillingUp","annotations":{"description":"Based
                    on recent sampling, the volume claimed by the instance {{
                    $labels.name }} in namespace {{
                    $labels.label_appcat_vshn_io_claim_namespace }} is expected
                    to fill up within four days. Currently {{ $value |
                    humanizePercentage }} is
                    available.","runbook_url":"https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup","summary":"PersistentVolume
                    is filling up."},"expr":"label_replace( bottomk(1,
                    (kubelet_volume_stats_available_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"} /
                    kubelet_volume_stats_capacity_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"}) \u003c 0.15 and
                    kubelet_volume_stats_used_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"} \u003e 0 and
                    predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\",
                    metrics_path=\"/metrics\"}[6h], 4 * 24 * 3600) \u003c
                    0  unless on(namespace, persistentvolumeclaim)
                    kube_persistentvolumeclaim_access_mode{
                    access_mode=\"ReadOnlyMany\"} == 1 unless on(namespace,
                    persistentvolumeclaim)
                    kube_persistentvolumeclaim_labels{label_excluded_from_alerts=\"true\"}
                    == 1) * on(namespace)
                    group_left(label_appcat_vshn_io_claim_namespace)
                    kube_namespace_labels, \"name\", \"$1\", \"namespace\",
                    \"vshn-postgresql-(.+)-.+\")","for":"1h","labels":{"severity":"warning"}}]},{"name":"postgresql-memory","rules":[{"alert":"PostgreSQLMemoryCritical","annotations":{"description":"The
                    memory claimed by the instance {{ $labels.name }} in
                    namespace {{ $labels.label_appcat_vshn_io_claim_namespace }}
                    has been over 85% for 2 hours.\n  Please reducde the load of
                    this instance, or increase the memory.","summary":"Memory
                    usage critical"},"expr":"label_replace( topk(1,
                    (container_memory_working_set_bytes{container=\"patroni\"}  /
                    on(container,pod,namespace)  kube_pod_container_resource_limits{resource=\"memory\"}
                    * 100) \u003e 85) * on(namespace)
                    group_left(label_appcat_vshn_io_claim_namespace)
                    kube_namespace_labels, \"name\", \"$1\", \"namespace\",
                    \"vshn-postgresql-(.+)-.+\")","for":"120m","labels":{"severity":"critical"}}]},{"name":"postgresql-connections","rules":[{"alert":"PostgreSQLConnectionsCritical","annotations":{"description":"The
                    number of connections to the instance {{ $labels.name }} in
                    namespace {{ $labels.label_appcat_vshn_io_claim_namespace }}
                    have been over 90% of the configured connections for 2
                    hours.\n  Please reduce the load of this
                    instance.","summary":"Connection usage
                    critical"},"expr":"label_replace( topk(1,
                    sum(pg_stat_activity_count) by (pod, namespace) \u003e
                    90/100 * sum(pg_settings_max_connections) by (pod,
                    namespace)) * on(namespace)
                    group_left(label_appcat_vshn_io_claim_namespace)
                    kube_namespace_labels, \"name\", \"$1\", \"namespace\",
                    \"vshn-postgresql-(.+)-.+\")","for":"120m","labels":{"severity":"critical"}}]}]}}'
                  prometheus-operator-validated: "true"
                creationTimestamp: 2023-07-28T09:05:58Z
                generation: 1
                managedFields:
                  - apiVersion: monitoring.coreos.com/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:groups:
                          .: {}
                          'k:{"name":"postgresql-connections"}':
                            .: {}
                            f:name: {}
                            f:rules: {}
                          'k:{"name":"postgresql-memory"}':
                            .: {}
                            f:name: {}
                            f:rules: {}
                          'k:{"name":"postgresql-storage"}':
                            .: {}
                            f:name: {}
                            f:rules: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: postgresql-rules
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5781"
                uid: 623eaf6d-0ab1-415a-b160-2787daa97936
              spec:
                groups:
                  - name: postgresql-storage
                    rules:
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: The volume claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            is only {{ $value | humanizePercentage }} free.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.03 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1m
                        labels:
                          severity: critical
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: Based on recent sampling, the volume claimed by the instance {{
                            $labels.name }} in namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} is
                            expected to fill up within four days. Currently {{
                            $value | humanizePercentage }} is available.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.15 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 and
                          predict_linear(kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"}[6h], 4 * 24 * 3600) <
                          0  unless on(namespace, persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1h
                        labels:
                          severity: warning
                  - name: postgresql-memory
                    rules:
                      - alert: PostgreSQLMemoryCritical
                        annotations:
                          description: >-
                            The memory claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            has been over 85% for 2 hours.
                              Please reducde the load of this instance, or increase the memory.
                          summary: Memory usage critical
                        expr: label_replace( topk(1,
                          (container_memory_working_set_bytes{container="patroni"}  /
                          on(container,pod,namespace)  kube_pod_container_resource_limits{resource="memory"}
                          * 100) > 85) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
                  - name: postgresql-connections
                    rules:
                      - alert: PostgreSQLConnectionsCritical
                        annotations:
                          description: >-
                            The number of connections to the instance {{ $labels.name }} in
                            namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} have
                            been over 90% of the configured connections for 2
                            hours.
                              Please reduce the load of this instance.
                          summary: Connection usage critical
                        expr: label_replace( topk(1, sum(pg_stat_activity_count) by (pod, namespace) >
                          90/100 * sum(pg_settings_max_connections) by (pod,
                          namespace)) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: namespace-permissions
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: namespace-permissions
            crossplane.io/external-create-pending: 2023-07-28T09:05:58Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:58Z
            crossplane.io/external-name: postgresql-prod-n97jr-service-rolebinding
          creationTimestamp: 2023-07-28T09:05:56Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:roleRef:
                        .: {}
                        f:apiGroup: {}
                        f:kind: {}
                        f:name: {}
                      f:subjects: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:56Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:59Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:roleRef:
                        .: {}
                        f:apiGroup: {}
                        f:kind: {}
                        f:name: {}
                      f:subjects: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:00Z
          name: postgresql-prod-n97jr-service-rolebinding
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5848"
          uid: 14175d64-1d89-40ef-a076-37a4cc7df3ba
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: appcat:services:read
                namespace: vshn-postgresql-postgresql-prod-n97jr
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: appcat:services:read
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: Group
                  name: organization
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"name":"appcat:services:read","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"appcat:services:read"},"subjects":[{"apiGroup":"rbac.authorization.k8s.io","kind":"Group","name":"organization"}]}'
                creationTimestamp: 2023-07-28T09:05:58Z
                managedFields:
                  - apiVersion: rbac.authorization.k8s.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:roleRef: {}
                      f:subjects: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:58Z
                name: appcat:services:read
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5795"
                uid: 94b21754-d511-4404-b4cf-5777e2369225
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: appcat:services:read
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: Group
                  name: organization
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: connection
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: connection
            crossplane.io/external-create-failed: 2023-07-28T09:06:06Z
            crossplane.io/external-create-pending: 2023-07-28T09:06:06Z
            crossplane.io/external-name: postgresql-prod-n97jr-connection
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 2
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:stringData:
                        .: {}
                        f:POSTGRESQL_DB: {}
                        f:POSTGRESQL_HOST: {}
                        f:POSTGRESQL_PORT: {}
                        f:POSTGRESQL_USER: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
                  f:references: {}
                  f:writeConnectionSecretToRef:
                    .: {}
                    f:name: {}
                    f:namespace: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
                f:spec:
                  f:forProvider:
                    f:manifest:
                      f:data:
                        .: {}
                        f:POSTGRESQL_PASSWORD: {}
                        f:ca.crt: {}
                        f:tls.crt: {}
                        f:tls.key: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:06Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:data:
                        .: {}
                        f:POSTGRESQL_DB: {}
                        f:POSTGRESQL_HOST: {}
                        f:POSTGRESQL_PASSWORD: {}
                        f:POSTGRESQL_PORT: {}
                        f:POSTGRESQL_USER: {}
                        f:ca.crt: {}
                        f:tls.crt: {}
                        f:tls.key: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:ownerReferences:
                          .: {}
                          'k:{"uid":"e07bdec2-1ec6-4565-8262-71044369ab84"}': {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:type: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:07Z
          name: postgresql-prod-n97jr-connection
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6010"
          uid: e07bdec2-1ec6-4565-8262-71044369ab84
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              data:
                POSTGRESQL_PASSWORD: hidden
              kind: Secret
              metadata:
                name: postgresql-prod-connection
                namespace: vshn-postgresql-postgresql-prod-n97jr
              stringData:
                POSTGRESQL_DB: postgres
                POSTGRESQL_HOST: postgresql-prod-n97jr.vshn-postgresql-postgresql-prod-n97jr.svc.cluster.local
                POSTGRESQL_PORT: "5432"
                POSTGRESQL_USER: postgres
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
          references:
            - patchesFrom:
                apiVersion: v1
                fieldPath: data.superuser-password
                kind: Secret
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data.POSTGRESQL_PASSWORD
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[ca.crt]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[ca.crt]
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[tls.crt]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[tls.crt]
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[tls.key]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[tls.key]
          writeConnectionSecretToRef:
            name: postgresql-prod-connection
            namespace: vshn-postgresql-postgresql-prod-n97jr
        status:
          atProvider:
            manifest:
              apiVersion: v1
              data:
                POSTGRESQL_DB: cG9zdGdyZXM=
              kind: Secret
              metadata:
                annotations:
                  
                creationTimestamp: 2023-07-28T09:06:06Z
                managedFields:
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:data:
                        .: {}
                        f:POSTGRESQL_DB: {}
                        f:POSTGRESQL_HOST: {}
                        f:POSTGRESQL_PASSWORD: {}
                        f:POSTGRESQL_PORT: {}
                        f:POSTGRESQL_USER: {}
                        f:ca.crt: {}
                        f:tls.crt: {}
                        f:tls.key: {}
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:ownerReferences:
                          .: {}
                          'k:{"uid":"e07bdec2-1ec6-4565-8262-71044369ab84"}': {}
                      f:type: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:06Z
                name: postgresql-prod-connection
                namespace: vshn-postgresql-postgresql-prod-n97jr
                ownerReferences:
                  - apiVersion: kubernetes.crossplane.io/v1alpha1
                    controller: true
                    kind: Object
                    name: postgresql-prod-n97jr-connection
                    uid: e07bdec2-1ec6-4565-8262-71044369ab84
                resourceVersion: "6007"
                uid: 1ebfc499-2295-4c52-8fa1-89b664b2cddc
              type: connection.crossplane.io/v1alpha1
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:07Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
            - lastTransitionTime: 2023-07-28T09:06:06Z
              reason: Available
              status: "True"
              type: Ready
      connectionDetails:
        - name: POSTGRESQL_HOST
          value: postgresql-prod-n97jr.vshn-postgresql-postgresql-prod-n97jr.svc.cluster.local
        - name: POSTGRESQL_PORT
          value: "5432"
        - name: POSTGRESQL_USER
          value: postgres
        - name: POSTGRESQL_DB
          value: postgres
    - name: postgresql-prod-n97jr-maintenance-rolebinding
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-maintenance-rolebinding
            crossplane.io/external-create-failed: 2023-07-28T09:06:11Z
            crossplane.io/external-create-pending: 2023-07-28T09:06:12Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:12Z
            crossplane.io/external-name: postgresql-prod-n97jr-maintenance-rolebinding
          creationTimestamp: 2023-07-28T09:06:10Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:roleRef:
                        .: {}
                        f:apiGroup: {}
                        f:kind: {}
                        f:name: {}
                      f:subjects: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:10Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-failed: {}
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:12Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:roleRef:
                        .: {}
                        f:apiGroup: {}
                        f:kind: {}
                        f:name: {}
                      f:subjects: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:13Z
          name: postgresql-prod-n97jr-maintenance-rolebinding
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6137"
          uid: 9602c753-bd0f-4baa-9073-581dd6a40c96
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: Role
                name: crossplane:appcat:job:postgres:maintenance
              subjects:
                - kind: ServiceAccount
                  name: maintenanceserviceaccount
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"name":"crossplane:appcat:job:postgres:maintenance","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"crossplane:appcat:job:postgres:maintenance"},"subjects":[{"kind":"ServiceAccount","name":"maintenanceserviceaccount"}]}'
                creationTimestamp: 2023-07-28T09:06:12Z
                managedFields:
                  - apiVersion: rbac.authorization.k8s.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:roleRef: {}
                      f:subjects: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:12Z
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6126"
                uid: 8d939d74-56cf-4d2c-92dc-5fc0bef7d94f
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: Role
                name: crossplane:appcat:job:postgres:maintenance
              subjects:
                - kind: ServiceAccount
                  name: maintenanceserviceaccount
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:13Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: network-policy
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: network-policy
            crossplane.io/external-create-pending: 2023-07-28T09:05:56Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:05:57Z
            crossplane.io/external-name: postgresql-prod-n97jr-network-policy
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:ingress: {}
                        f:podSelector: {}
                        f:policyTypes: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:55Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:05:57Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:ingress: {}
                        f:podSelector: {}
                        f:policyTypes: {}
                      f:status: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:05:59Z
          name: postgresql-prod-n97jr-network-policy
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5828"
          uid: 5893749e-8f72-4ab0-aee6-f154670893e1
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: networking.k8s.io/v1
              kind: NetworkPolicy
              metadata:
                name: allow-from-claim-namespace-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                ingress:
                  - from:
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: app1-prod
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: appcat-slos
                podSelector: {}
                policyTypes:
                  - Ingress
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: networking.k8s.io/v1
              kind: NetworkPolicy
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"networking.k8s.io/v1","kind":"NetworkPolicy","metadata":{"name":"allow-from-claim-namespace-postgresql-prod-n97jr","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"ingress":[{"from":[{"namespaceSelector":{"matchLabels":{"kubernetes.io/metadata.name":"app1-prod"}}},{"namespaceSelector":{"matchLabels":{"kubernetes.io/metadata.name":"appcat-slos"}}}]}],"podSelector":{},"policyTypes":["Ingress"]}}'
                creationTimestamp: 2023-07-28T09:05:57Z
                generation: 1
                managedFields:
                  - apiVersion: networking.k8s.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        f:ingress: {}
                        f:policyTypes: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:05:57Z
                name: allow-from-claim-namespace-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "5726"
                uid: 74b6da2f-9d07-485e-8ab7-370f1267aebc
              spec:
                ingress:
                  - from:
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: app1-prod
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: appcat-slos
                podSelector: {}
                policyTypes:
                  - Ingress
              status: {}
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:59Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:05:57Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: postgresql-prod-n97jr-maintenancejob
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-maintenancejob
            crossplane.io/external-create-pending: 2023-07-28T09:06:11Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:11Z
            crossplane.io/external-name: postgresql-prod-n97jr-maintenancejob
          creationTimestamp: 2023-07-28T09:06:11Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 2
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:spec:
                        .: {}
                        f:jobTemplate:
                          .: {}
                          f:metadata: {}
                          f:spec:
                            .: {}
                            f:template:
                              .: {}
                              f:metadata: {}
                              f:spec:
                                .: {}
                                f:containers: {}
                                f:restartPolicy: {}
                                f:serviceAccountName: {}
                        f:schedule: {}
                        f:successfulJobsHistoryLimit: {}
                      f:status: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:11Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:12Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:generation: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:spec:
                        .: {}
                        f:concurrencyPolicy: {}
                        f:failedJobsHistoryLimit: {}
                        f:jobTemplate:
                          .: {}
                          f:metadata:
                            .: {}
                            f:creationTimestamp: {}
                          f:spec:
                            .: {}
                            f:template:
                              .: {}
                              f:metadata:
                                .: {}
                                f:creationTimestamp: {}
                              f:spec:
                                .: {}
                                f:containers: {}
                                f:dnsPolicy: {}
                                f:restartPolicy: {}
                                f:schedulerName: {}
                                f:securityContext: {}
                                f:serviceAccount: {}
                                f:serviceAccountName: {}
                                f:terminationGracePeriodSeconds: {}
                        f:schedule: {}
                        f:successfulJobsHistoryLimit: {}
                        f:suspend: {}
                      f:status: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:12Z
          name: postgresql-prod-n97jr-maintenancejob
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6150"
          uid: 1f012c60-37d5-41fa-8e44-fd33df825716
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: batch/v1
              kind: CronJob
              metadata:
                name: maintenancejob
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                jobTemplate:
                  metadata: {}
                  spec:
                    template:
                      metadata: {}
                      spec:
                        containers:
                          - args:
                              - maintenance
                              - --service
                              - postgresql
                            env:
                              - name: INSTANCE_NAMESPACE
                                value: vshn-postgresql-postgresql-prod-n97jr
                              - name: CLAIM_NAME
                                value: postgresql-prod
                              - name: CLAIM_NAMESPACE
                                value: app1-prod
                              - name: SG_NAMESPACE
                                valueFrom:
                                  secretKeyRef:
                                    key: SG_NAMESPACE
                                    name: maintenancesecret
                              - name: API_USERNAME
                                valueFrom:
                                  secretKeyRef:
                                    key: k8sUsername
                                    name: maintenancesecret
                              - name: API_PASSWORD
                                valueFrom:
                                  secretKeyRef:
                                    key: clearPassword
                                    name: maintenancesecret
                            image: ghcr.io/vshn/appcat:add_PSQLServiceType
                            name: maintenancejob
                            resources: {}
                        restartPolicy: Never
                        serviceAccountName: maintenanceserviceaccount
                schedule: 21 21 * * 2
                successfulJobsHistoryLimit: 0
              status: {}
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: batch/v1
              kind: CronJob
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"batch/v1","kind":"CronJob","metadata":{"name":"maintenancejob","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"spec":{"jobTemplate":{"metadata":{},"spec":{"template":{"metadata":{},"spec":{"containers":[{"args":["maintenance","--service","postgresql"],"env":[{"name":"INSTANCE_NAMESPACE","value":"vshn-postgresql-postgresql-prod-n97jr"},{"name":"CLAIM_NAME","value":"postgresql-prod"},{"name":"CLAIM_NAMESPACE","value":"app1-prod"},{"name":"SG_NAMESPACE","valueFrom":{"secretKeyRef":{"key":"SG_NAMESPACE","name":"maintenancesecret"}}},{"name":"API_USERNAME","valueFrom":{"secretKeyRef":{"key":"k8sUsername","name":"maintenancesecret"}}},{"name":"API_PASSWORD","valueFrom":{"secretKeyRef":{"key":"clearPassword","name":"maintenancesecret"}}}],"image":"ghcr.io/vshn/appcat:add_PSQLServiceType","name":"maintenancejob","resources":{}}],"restartPolicy":"Never","serviceAccountName":"maintenanceserviceaccount"}}}},"schedule":"21
                    21 * * 2","successfulJobsHistoryLimit":0},"status":{}}'
                creationTimestamp: 2023-07-28T09:06:11Z
                generation: 1
                managedFields:
                  - apiVersion: batch/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        f:concurrencyPolicy: {}
                        f:failedJobsHistoryLimit: {}
                        f:jobTemplate:
                          f:spec:
                            f:template:
                              f:spec:
                                f:containers:
                                  'k:{"name":"maintenancejob"}':
                                    .: {}
                                    f:args: {}
                                    f:env:
                                      .: {}
                                      'k:{"name":"API_PASSWORD"}':
                                        .: {}
                                        f:name: {}
                                        f:valueFrom:
                                          .: {}
                                          f:secretKeyRef: {}
                                      'k:{"name":"API_USERNAME"}':
                                        .: {}
                                        f:name: {}
                                        f:valueFrom:
                                          .: {}
                                          f:secretKeyRef: {}
                                      'k:{"name":"CLAIM_NAME"}':
                                        .: {}
                                        f:name: {}
                                        f:value: {}
                                      'k:{"name":"CLAIM_NAMESPACE"}':
                                        .: {}
                                        f:name: {}
                                        f:value: {}
                                      'k:{"name":"INSTANCE_NAMESPACE"}':
                                        .: {}
                                        f:name: {}
                                        f:value: {}
                                      'k:{"name":"SG_NAMESPACE"}':
                                        .: {}
                                        f:name: {}
                                        f:valueFrom:
                                          .: {}
                                          f:secretKeyRef: {}
                                    f:image: {}
                                    f:imagePullPolicy: {}
                                    f:name: {}
                                    f:resources: {}
                                    f:terminationMessagePath: {}
                                    f:terminationMessagePolicy: {}
                                f:dnsPolicy: {}
                                f:restartPolicy: {}
                                f:schedulerName: {}
                                f:securityContext: {}
                                f:serviceAccount: {}
                                f:serviceAccountName: {}
                                f:terminationGracePeriodSeconds: {}
                        f:schedule: {}
                        f:successfulJobsHistoryLimit: {}
                        f:suspend: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:11Z
                name: maintenancejob
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6148"
                uid: 7bf19475-9b66-4554-ae99-812cc1a1cdf3
              spec:
                concurrencyPolicy: Allow
                failedJobsHistoryLimit: 1
                jobTemplate:
                  metadata:
                    creationTimestamp: null
                  spec:
                    template:
                      metadata:
                        creationTimestamp: null
                      spec:
                        containers:
                          - args:
                              - maintenance
                              - --service
                              - postgresql
                            env:
                              - name: INSTANCE_NAMESPACE
                                value: vshn-postgresql-postgresql-prod-n97jr
                              - name: CLAIM_NAME
                                value: postgresql-prod
                              - name: CLAIM_NAMESPACE
                                value: app1-prod
                              - name: SG_NAMESPACE
                                valueFrom:
                                  secretKeyRef:
                                    key: SG_NAMESPACE
                                    name: maintenancesecret
                              - name: API_USERNAME
                                valueFrom:
                                  secretKeyRef:
                                    key: k8sUsername
                                    name: maintenancesecret
                              - name: API_PASSWORD
                                valueFrom:
                                  secretKeyRef:
                                    key: clearPassword
                                    name: maintenancesecret
                            image: ghcr.io/vshn/appcat:add_PSQLServiceType
                            imagePullPolicy: IfNotPresent
                            name: maintenancejob
                            resources: {}
                            terminationMessagePath: /dev/termination-log
                            terminationMessagePolicy: File
                        dnsPolicy: ClusterFirst
                        restartPolicy: Never
                        schedulerName: default-scheduler
                        securityContext: {}
                        serviceAccount: maintenanceserviceaccount
                        serviceAccountName: maintenanceserviceaccount
                        terminationGracePeriodSeconds: 30
                schedule: 21 21 * * 2
                successfulJobsHistoryLimit: 0
                suspend: false
              status: {}
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: pg-bucket
      resource:
        apiVersion: appcat.vshn.io/v1
        kind: XObjectBucket
        metadata:
          annotations:
            crossplane.io/composition-resource-name: pg-bucket
          creationTimestamp: 2023-07-28T09:05:55Z
          finalizers:
            - composite.apiextensions.crossplane.io
          generateName: postgresql-prod-n97jr-
          generation: 3
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: appcat.vshn.io/v1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:finalizers:
                    .: {}
                    v:"composite.apiextensions.crossplane.io": {}
                  f:generateName: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:compositionRef:
                    .: {}
                    f:name: {}
                  f:compositionRevisionRef:
                    .: {}
                    f:name: {}
                  f:compositionUpdatePolicy: {}
                  f:parameters:
                    .: {}
                    f:bucketName: {}
                    f:region: {}
                  f:resourceRefs: {}
                  f:writeConnectionSecretToRef:
                    .: {}
                    f:name: {}
                    f:namespace: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:05:57Z
            - apiVersion: appcat.vshn.io/v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:conditions: {}
              manager: crossplane
              operation: Update
              subresource: status
              time: 2023-07-28T09:05:58Z
          name: postgresql-prod-n97jr
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "5973"
          uid: e5e823f8-f56c-47fb-9e5c-97ebf0795b72
        spec:
          compositionRef:
            name: dev.objectbuckets.appcat.vshn.io
          compositionRevisionRef:
            name: dev.objectbuckets.appcat.vshn.io-4118cad
          compositionUpdatePolicy: Automatic
          parameters:
            bucketName: postgresql-prod-n97jr
            region: us-east-1
          resourceRefs:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              name: postgresql-prod-n97jr-create-bucket
          writeConnectionSecretToRef:
            name: pgbucket-postgresql-prod-n97jr
            namespace: vshn-postgresql-postgresql-prod-n97jr
        status:
          conditions:
            - lastTransitionTime: 2023-07-28T09:05:58Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
            - lastTransitionTime: 2023-07-28T09:06:02Z
              reason: Available
              status: "True"
              type: Ready
      connectionDetails:
        - name: ENDPOINT_URL
          value: http://minio-server.minio.svc:9000
        - name: AWS_ACCESS_KEY_ID
          value: minioadmin
        - name: AWS_SECRET_ACCESS_KEY
          value: minioadmin
        - name: BUCKET_NAME
          value: postgresql-prod-n97jr
    - name: postgresql-prod-n97jr-maintenance-role
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-maintenance-role
            crossplane.io/external-create-pending: 2023-07-28T09:06:11Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:11Z
            crossplane.io/external-name: postgresql-prod-n97jr-maintenance-role
          creationTimestamp: 2023-07-28T09:06:11Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 1
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:rules: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:11Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:12Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:rules: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:12Z
          name: postgresql-prod-n97jr-maintenance-role
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6133"
          uid: 703d92aa-8afa-42d1-9123-804162032047
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: Role
              metadata:
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
              rules:
                - apiGroups:
                    - stackgres.io
                  resources:
                    - sgdbops
                  verbs:
                    - delete
                    - create
                    - get
                    - list
                    - watch
                - apiGroups:
                    - stackgres.io
                  resources:
                    - sgclusters
                  verbs:
                    - list
                    - get
                - apiGroups:
                    - vshn.appcat.vshn.io
                  resources:
                    - vshnpostgresqls
                  verbs:
                    - get
                    - update
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
        status:
          atProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: Role
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"name":"crossplane:appcat:job:postgres:maintenance","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"rules":[{"apiGroups":["stackgres.io"],"resources":["sgdbops"],"verbs":["delete","create","get","list","watch"]},{"apiGroups":["stackgres.io"],"resources":["sgclusters"],"verbs":["list","get"]},{"apiGroups":["vshn.appcat.vshn.io"],"resources":["vshnpostgresqls"],"verbs":["get","update"]}]}'
                creationTimestamp: 2023-07-28T09:06:11Z
                managedFields:
                  - apiVersion: rbac.authorization.k8s.io/v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:rules: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:11Z
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6101"
                uid: 74f47efd-771d-4b30-839f-faec2f83abca
              rules:
                - apiGroups:
                    - stackgres.io
                  resources:
                    - sgdbops
                  verbs:
                    - delete
                    - create
                    - get
                    - list
                    - watch
                - apiGroups:
                    - stackgres.io
                  resources:
                    - sgclusters
                  verbs:
                    - list
                    - get
                - apiGroups:
                    - vshn.appcat.vshn.io
                  resources:
                    - vshnpostgresqls
                  verbs:
                    - get
                    - update
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:12Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
    - name: postgresql-prod-n97jr-maintenance-secret
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: postgresql-prod-n97jr-maintenance-secret
            crossplane.io/external-create-pending: 2023-07-28T09:06:10Z
            crossplane.io/external-create-succeeded: 2023-07-28T09:06:10Z
            crossplane.io/external-name: postgresql-prod-n97jr-maintenance-secret
          creationTimestamp: 2023-07-28T09:06:10Z
          finalizers:
            - finalizer.managedresource.crossplane.io
          generation: 2
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          managedFields:
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    .: {}
                    f:crossplane.io/composition-resource-name: {}
                  f:labels:
                    .: {}
                    f:crossplane.io/claim-name: {}
                    f:crossplane.io/claim-namespace: {}
                    f:crossplane.io/composite: {}
                  f:ownerReferences:
                    .: {}
                    'k:{"uid":"4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7"}': {}
                f:spec:
                  .: {}
                  f:deletionPolicy: {}
                  f:forProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:name: {}
                        f:namespace: {}
                      f:stringData:
                        .: {}
                        f:SG_NAMESPACE: {}
                  f:managementPolicy: {}
                  f:providerConfigRef:
                    .: {}
                    f:name: {}
                  f:references: {}
              manager: crossplane
              operation: Update
              time: 2023-07-28T09:06:10Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:metadata:
                  f:annotations:
                    f:crossplane.io/external-create-pending: {}
                    f:crossplane.io/external-create-succeeded: {}
                    f:crossplane.io/external-name: {}
                  f:finalizers:
                    .: {}
                    v:"finalizer.managedresource.crossplane.io": {}
                f:spec:
                  f:forProvider:
                    f:manifest:
                      f:data:
                        .: {}
                        f:clearPassword: {}
                        f:k8sUsername: {}
                        f:password: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              time: 2023-07-28T09:06:11Z
            - apiVersion: kubernetes.crossplane.io/v1alpha1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  .: {}
                  f:atProvider:
                    .: {}
                    f:manifest:
                      .: {}
                      f:apiVersion: {}
                      f:data:
                        .: {}
                        f:SG_NAMESPACE: {}
                        f:clearPassword: {}
                        f:k8sUsername: {}
                        f:password: {}
                      f:kind: {}
                      f:metadata:
                        .: {}
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                        f:creationTimestamp: {}
                        f:managedFields: {}
                        f:name: {}
                        f:namespace: {}
                        f:resourceVersion: {}
                        f:uid: {}
                      f:type: {}
                  f:conditions: {}
              manager: crossplane-kubernetes-provider
              operation: Update
              subresource: status
              time: 2023-07-28T09:06:11Z
          name: postgresql-prod-n97jr-maintenance-secret
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          resourceVersion: "6092"
          uid: a31ab3e4-5c35-46fc-96fd-0e2994d94d02
        spec:
          deletionPolicy: Delete
          forProvider:
            manifest:
              apiVersion: v1
              data:
                clearPassword: cGFzc3dvcmQ=
                k8sUsername: YWRtaW4=
                password: NzQ5ZjA5YmFkZThhY2E3NTU2NjBlZWIxNzc5MmRhODgwMjE4ZDRmYmRjNGUyNWZiZWMyNzlkN2ZlOWY2NWQ3MA==
              kind: Secret
              metadata:
                name: maintenancesecret
                namespace: vshn-postgresql-postgresql-prod-n97jr
              stringData:
                SG_NAMESPACE: stackgres
          managementPolicy: Default
          providerConfigRef:
            name: kubernetes
          references:
            - patchesFrom:
                apiVersion: v1
                fieldPath: data
                kind: Secret
                name: stackgres-restapi
                namespace: stackgres
              toFieldPath: data
        status:
          atProvider:
            manifest:
              apiVersion: v1
              data:
                SG_NAMESPACE: c3RhY2tncmVz
                clearPassword: cGFzc3dvcmQ=
                k8sUsername: YWRtaW4=
                password: NzQ5ZjA5YmFkZThhY2E3NTU2NjBlZWIxNzc5MmRhODgwMjE4ZDRmYmRjNGUyNWZiZWMyNzlkN2ZlOWY2NWQ3MA==
              kind: Secret
              metadata:
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: '{"apiVersion":"v1","data":{"clearPassword":"cGFzc3dvcmQ=","k8sUsername":"YWRtaW4=","password":"NzQ5ZjA5YmFkZThhY2E3NTU2NjBlZWIxNzc5MmRhODgwMjE4ZDRmYmRjNGUyNWZiZWMyNzlkN2ZlOWY2NWQ3MA=="},"kind":"Secret","metadata":{"name":"maintenancesecret","namespace":"vshn-postgresql-postgresql-prod-n97jr"},"stringData":{"SG_NAMESPACE":"stackgres"}}'
                creationTimestamp: 2023-07-28T09:06:10Z
                managedFields:
                  - apiVersion: v1
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:data:
                        .: {}
                        f:SG_NAMESPACE: {}
                        f:clearPassword: {}
                        f:k8sUsername: {}
                        f:password: {}
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:type: {}
                    manager: crossplane-kubernetes-provider
                    operation: Update
                    time: 2023-07-28T09:06:10Z
                name: maintenancesecret
                namespace: vshn-postgresql-postgresql-prod-n97jr
                resourceVersion: "6060"
                uid: 13913ef2-699d-4adc-bbfd-cc338b0076d1
              type: Opaque
          conditions:
            - lastTransitionTime: 2023-07-28T09:06:11Z
              reason: Available
              status: "True"
              type: Ready
            - lastTransitionTime: 2023-07-28T09:06:11Z
              reason: ReconcileSuccess
              status: "True"
              type: Synced
      connectionDetails: []
desired:
  composite:
    resource:
      kind: XVSHNPostgreSQL
      apiVersion: vshn.appcat.vshn.io/v1
      metadata:
        name: postgresql-prod-n97jr
        generateName: postgresql-prod-
        uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        resourceVersion: "57775"
        generation: 5
        creationTimestamp: 2023-07-28T09:05:53Z
        labels:
          crossplane.io/claim-name: postgresql-prod
          crossplane.io/claim-namespace: app1-prod
          crossplane.io/composite: postgresql-prod-n97jr
        annotations:
          kubectl.kubernetes.io/last-applied-configuration: >
            {"apiVersion":"vshn.appcat.vshn.io/v1","kind":"VSHNPostgreSQL","metadata":{"annotations":{},"name":"postgresql-prod","namespace":"app1-prod"},"spec":{"parameters":{"backup":{"schedule":"0
            22 * *
            *"},"network":{"serviceType":"LoadBalancer"},"service":{"majorVersion":"15"}},"writeConnectionSecretToRef":{"name":"postgres-creds-connection"}}}
        finalizers:
          - composite.apiextensions.crossplane.io
        managedFields:
          - manager: crossplane
            operation: Update
            apiVersion: vshn.appcat.vshn.io/v1
            time: 2023-07-28T09:05:55Z
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:kubectl.kubernetes.io/last-applied-configuration: {}
                f:finalizers:
                  .: {}
                  v:"composite.apiextensions.crossplane.io": {}
                f:generateName: {}
                f:labels:
                  .: {}
                  f:crossplane.io/claim-name: {}
                  f:crossplane.io/claim-namespace: {}
                  f:crossplane.io/composite: {}
              f:spec:
                .: {}
                f:claimRef:
                  .: {}
                  f:apiVersion: {}
                  f:kind: {}
                  f:name: {}
                  f:namespace: {}
                f:compositionRef:
                  .: {}
                  f:name: {}
                f:compositionRevisionRef:
                  .: {}
                  f:name: {}
                f:compositionUpdatePolicy: {}
                f:parameters:
                  .: {}
                  f:backup:
                    .: {}
                    f:deletionProtection: {}
                    f:deletionRetention: {}
                    f:retention: {}
                    f:schedule: {}
                  f:encryption: {}
                  f:instances: {}
                  f:maintenance:
                    .: {}
                    f:dayOfWeek: {}
                    f:timeOfDay: {}
                  f:monitoring: {}
                  f:network:
                    .: {}
                    f:ipFilter: {}
                    f:serviceType: {}
                  f:replication: {}
                  f:restore: {}
                  f:scheduling: {}
                  f:service:
                    .: {}
                    f:majorVersion: {}
                  f:size:
                    .: {}
                    f:plan: {}
                    f:requests: {}
                  f:updateStrategy:
                    .: {}
                    f:type: {}
                f:resourceRefs: {}
                f:writeConnectionSecretToRef:
                  .: {}
                  f:name: {}
                  f:namespace: {}
          - manager: crossplane
            operation: Update
            apiVersion: vshn.appcat.vshn.io/v1
            time: 2023-07-28T09:06:01Z
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                .: {}
                f:certificateConditions: {}
                f:conditions: {}
                f:instanceNamespace: {}
                f:localCAConditions: {}
                f:namespaceConditions: {}
                f:networkPolicyConditions: {}
                f:pgclusterConditions: {}
                f:pgconfigConditions: {}
                f:profileConditions: {}
                f:secretConditions: {}
            subresource: status
      spec:
        parameters:
          service:
            majorVersion: "15"
            pgSettings: null
          maintenance:
            dayOfWeek: tuesday
            timeOfDay: 21:21:58
          size:
            requests: {}
            plan: standard-2
          scheduling: {}
          network:
            ipFilter:
              - 0.0.0.0/0
            serviceType: LoadBalancer
          backup:
            schedule: 0 22 * * *
            retention: 6
            deletionProtection: true
            deletionRetention: 7
          restore: {}
          monitoring: {}
          encryption: {}
          updateStrategy:
            type: Immediate
          instances: 1
          replication: {}
        writeConnectionSecretToRef:
          name: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
          namespace: syn-crossplane
        resourceRef: {}
      status:
        instanceNamespace: vshn-postgresql-postgresql-prod-n97jr
        namespaceConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:58Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
        profileConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:58Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
        pgconfigConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:00Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: ReconcileSuccess
        pgclusterConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:01Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:01Z
            reason: ReconcileSuccess
        secretConditions:
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:07Z
            reason: ReconcileSuccess
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:06Z
            reason: Available
        ObjectBucketConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:00Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: ReconcileSuccess
        ObjectBackupConfigConditions:
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:58Z
            reason: ReconcileSuccess
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:06:02Z
            reason: Available
        networkPolicyConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:57Z
            reason: ReconcileSuccess
        localCAConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: ReconcileSuccess
        certificateConditions:
          - type: Ready
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:59Z
            reason: Available
          - type: Synced
            status: "True"
            lastTransitionTime: 2023-07-28T09:05:58Z
            reason: ReconcileSuccess
    connectionDetails:
      - name: POSTGRESQL_PORT
        value: "5432"
      - name: POSTGRESQL_USER
        value: postgres
      - name: POSTGRESQL_DB
        value: postgres
      - name: tls.key
       
      - name: POSTGRESQL_PASSWORD
    
      - name: LOADBALANCER_IP
        value: 172.18.0.200
      - name: POSTGRESQL_URL

      - name: POSTGRESQL_HOST
        value: postgresql-prod-n97jr.vshn-postgresql-postgresql-prod-n97jr.svc.cluster.local
  resources:
    - name: podmonitor
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: podmonitor
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-podmonitor
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PodMonitor
              metadata:
                name: postgresql-podmonitor
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                namespaceSelector:
                  matchNames:
                    - vshn-postgresql-postgresql-prod-n97jr
                podMetricsEndpoints:
                  - port: pgexporter
                selector:
                  matchLabels:
                    app: StackGresCluster
                    stackgres.io/cluster-name: postgresql-prod-n97jr
          providerConfigRef:
            name: kubernetes
    - name: profile
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: profile
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-profile
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1
              kind: SGInstanceProfile
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                containers:
                  backup.create-backup:
                    cpu: 250m
                    memory: 256Mi
                  cluster-controller:
                    cpu: 32m
                    memory: 188Mi
                  dbops.run-dbops:
                    cpu: 250m
                    memory: 256Mi
                  dbops.set-dbops-result:
                    cpu: 250m
                    memory: 256Mi
                  envoy:
                    cpu: 32m
                    memory: 64Mi
                  pgbouncer:
                    cpu: 16m
                    memory: 32Mi
                  postgres-util:
                    cpu: 10m
                    memory: 4Mi
                  prometheus-postgres-exporter:
                    cpu: 10m
                    memory: 32Mi
                cpu: 400m
                initContainers:
                  cluster-reconciliation-cycle:
                    cpu: 100m
                    memory: 100Mi
                  dbops.set-dbops-running:
                    cpu: 250m
                    memory: 256Mi
                  pgbouncer-auth-file:
                    cpu: 100m
                    memory: 100Mi
                  relocate-binaries:
                    cpu: 100m
                    memory: 100Mi
                  setup-arbitrary-user:
                    cpu: 100m
                    memory: 100Mi
                  setup-scripts:
                    cpu: 100m
                    memory: 100Mi
                memory: 1728Mi
                requests:
                  cpu: null
                  memory: null
          providerConfigRef:
            name: kubernetes
    - name: ns-observer
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: ns-observer
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: ns-observer-postgresql-prod-n97jr
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                labels:
                  appcat.vshn.io/claim-namespace: ""
                  appcat.vshn.io/servicename: postgresql-standalone
                  appuio.io/billing-name: appcat-postgresql
                  appuio.io/no-rbac-creation: "true"
                  appuio.io/organization: vshn
                name: app1-prod
          managementPolicy: Observe
          providerConfigRef:
            name: kubernetes
    - name: certificate
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: certificate
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-certificate
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Certificate
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                dnsNames:
                  - vshn.appcat.vshn.ch
                duration: 87600h
                isCA: false
                issuerRef:
                  group: cert-manager.io
                  kind: Issuer
                  name: postgresql-prod-n97jr
                privateKey:
                  
                  encoding: PKCS1
                  size: 4096
                renewBefore: 2400h
                secretName: tls-certificate
                subject:
                  organizations:
                    - vshn-appcat
                usages:
                  - server auth
                  - client auth
          providerConfigRef:
            name: kubernetes
    - name: local-ca
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: local-ca
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-localca
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: cert-manager.io/v1
              kind: Issuer
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                selfSigned:
                  crlDistributionPoints: []
          providerConfigRef:
            name: kubernetes
    - name: pg-conf
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-pgconf
          generateName: postgresql-prod-n97jr-
          creationTimestamp: null
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          annotations:
            crossplane.io/composition-resource-name: pg-conf
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
              controller: true
              blockOwnerDeletion: true
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: SGPostgresConfig
              apiVersion: stackgres.io/v1
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                uid: 3ff259e9-415b-46d5-ab7a-3534fa0eb3d0
                resourceVersion: "57734"
                generation: 1
                creationTimestamp: 2023-07-28T09:05:59Z
                annotations:
                  kubectl.kubernetes.io/last-applied-configuration: ""
                  stackgres.io/operatorVersion: 1.5.0
                managedFields:
                  - manager: crossplane-kubernetes-provider
                    operation: Update
                    apiVersion: stackgres.io/v1
                    time: 2023-07-28T09:05:58Z
                    fieldsType: FieldsV1
                    fieldsV1:
                      f:metadata:
                        f:annotations:
                          .: {}
                          f:kubectl.kubernetes.io/last-applied-configuration: {}
                      f:spec:
                        .: {}
                        f:postgresVersion: {}
                        f:postgresql.conf: {}
              spec:
                postgresVersion: "15"
                postgresql.conf:
                  autovacuum_max_workers: "3"
                  autovacuum_vacuum_cost_delay: 2ms
                  autovacuum_work_mem: 512MB
                  checkpoint_completion_target: "0.9"
                  checkpoint_timeout: 15min
                  default_statistics_target: "200"
                  default_toast_compression: lz4
                  enable_partitionwise_aggregate: on
                  enable_partitionwise_join: on
                  huge_pages: off
                  jit_inline_above_cost: "-1"
                  log_autovacuum_min_duration: 0ms
                  log_checkpoints: on
                  log_connections: on
                  log_disconnections: on
                  log_line_prefix: "%t [%p]: db=%d,user=%u,app=%a,client=%h "
                  log_lock_waits: on
                  log_min_duration_statement: 1s
                  log_statement: none
                  log_temp_files: 0kB
                  maintenance_work_mem: 2GB
                  max_locks_per_transaction: "128"
                  max_pred_locks_per_transaction: "128"
                  max_prepared_transactions: "32"
                  max_replication_slots: "20"
                  max_wal_senders: "20"
                  max_wal_size: 2GB
                  min_wal_size: 1GB
                  pg_stat_statements.track_utility: off
                  random_page_cost: "1.5"
                  shared_preload_libraries: pg_stat_statements, auto_explain
                  superuser_reserved_connections: "8"
                  track_activity_query_size: 4kB
                  track_functions: pl
                  track_io_timing: on
                  wal_keep_size: 1536MB
                  work_mem: 10MB
              status:
                postgresql.conf: null
        status:
          atProvider:
            manifest: null
    - name: connection
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: connection
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-connection
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Secret
              metadata:
                name: postgresql-prod-connection
                namespace: vshn-postgresql-postgresql-prod-n97jr
              stringData:
                POSTGRESQL_DB: postgres
                POSTGRESQL_HOST: postgresql-prod-n97jr.vshn-postgresql-postgresql-prod-n97jr.svc.cluster.local
                POSTGRESQL_PORT: "5432"
                POSTGRESQL_USER: postgres
          providerConfigRef:
            name: kubernetes
          references:
            - patchesFrom:
                apiVersion: v1
                fieldPath: data.superuser-password
                kind: Secret
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data.POSTGRESQL_PASSWORD
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[ca.crt]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[ca.crt]
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[tls.crt]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[tls.crt]
            - patchesFrom:
                apiVersion: v1
                fieldPath: data[tls.key]
                kind: Secret
                name: tls-certificate
                namespace: vshn-postgresql-postgresql-prod-n97jr
              toFieldPath: data[tls.key]
          writeConnectionSecretToRef:
            name: postgresql-prod-connection
            namespace: vshn-postgresql-postgresql-prod-n97jr
    - name: network-policy
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: network-policy
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-network-policy
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: networking.k8s.io/v1
              kind: NetworkPolicy
              metadata:
                name: allow-from-claim-namespace-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                ingress:
                  - from:
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: app1-prod
                      - namespaceSelector:
                          matchLabels:
                            kubernetes.io/metadata.name: appcat-slos
                podSelector: {}
                policyTypes:
                  - Ingress
          providerConfigRef:
            name: kubernetes
    - name: prometheusrule
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: prometheusrule
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-prometheusrule
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: monitoring.coreos.com/v1
              kind: PrometheusRule
              metadata:
                name: postgresql-rules
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                groups:
                  - name: postgresql-storage
                    rules:
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: The volume claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            is only {{ $value | humanizePercentage }} free.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.03 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1m
                        labels:
                          severity: critical
                      - alert: PostgreSQLPersistentVolumeFillingUp
                        annotations:
                          description: Based on recent sampling, the volume claimed by the instance {{
                            $labels.name }} in namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} is
                            expected to fill up within four days. Currently {{
                            $value | humanizePercentage }} is available.
                          runbook_url: https://runbooks.prometheus-operator.dev/runbooks/kubernetes/kubepersistentvolumefillingup
                          summary: PersistentVolume is filling up.
                        expr: label_replace( bottomk(1,
                          (kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"} /
                          kubelet_volume_stats_capacity_bytes{job="kubelet",
                          metrics_path="/metrics"}) < 0.15 and
                          kubelet_volume_stats_used_bytes{job="kubelet",
                          metrics_path="/metrics"} > 0 and
                          predict_linear(kubelet_volume_stats_available_bytes{job="kubelet",
                          metrics_path="/metrics"}[6h], 4 * 24 * 3600) <
                          0  unless on(namespace, persistentvolumeclaim)
                          kube_persistentvolumeclaim_access_mode{
                          access_mode="ReadOnlyMany"} == 1 unless on(namespace,
                          persistentvolumeclaim)
                          kube_persistentvolumeclaim_labels{label_excluded_from_alerts="true"}
                          == 1) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 1h
                        labels:
                          severity: warning
                  - name: postgresql-memory
                    rules:
                      - alert: PostgreSQLMemoryCritical
                        annotations:
                          description: >-
                            The memory claimed by the instance {{ $labels.name }} in namespace
                            {{ $labels.label_appcat_vshn_io_claim_namespace }}
                            has been over 85% for 2 hours.
                              Please reducde the load of this instance, or increase the memory.
                          summary: Memory usage critical
                        expr: label_replace( topk(1,
                          (container_memory_working_set_bytes{container="patroni"}  /
                          on(container,pod,namespace)  kube_pod_container_resource_limits{resource="memory"}
                          * 100) > 85) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
                  - name: postgresql-connections
                    rules:
                      - alert: PostgreSQLConnectionsCritical
                        annotations:
                          description: >-
                            The number of connections to the instance {{ $labels.name }} in
                            namespace {{
                            $labels.label_appcat_vshn_io_claim_namespace }} have
                            been over 90% of the configured connections for 2
                            hours.
                              Please reduce the load of this instance.
                          summary: Connection usage critical
                        expr: label_replace( topk(1, sum(pg_stat_activity_count) by (pod, namespace) >
                          90/100 * sum(pg_settings_max_connections) by (pod,
                          namespace)) * on(namespace)
                          group_left(label_appcat_vshn_io_claim_namespace)
                          kube_namespace_labels, "name", "$1", "namespace",
                          "vshn-postgresql-(.+)-.+")
                        for: 120m
                        labels:
                          severity: critical
          providerConfigRef:
            name: kubernetes
    - name: namespace-permissions
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: namespace-permissions
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-service-rolebinding
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: rbac.authorization.k8s.io/v1
              kind: RoleBinding
              metadata:
                name: appcat:services:read
                namespace: vshn-postgresql-postgresql-prod-n97jr
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: ClusterRole
                name: appcat:services:read
              subjects:
                - apiGroup: rbac.authorization.k8s.io
                  kind: Group
                  name: organization
          providerConfigRef:
            name: kubernetes
    - name: pg-bucket
      resource:
        apiVersion: appcat.vshn.io/v1
        kind: XObjectBucket
        metadata:
          annotations:
            crossplane.io/composition-resource-name: pg-bucket
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          parameters:
            bucketName: postgresql-prod-n97jr
            region: us-east-1
          writeConnectionSecretToRef:
            name: pgbucket-postgresql-prod-n97jr
            namespace: vshn-postgresql-postgresql-prod-n97jr
    - name: cluster
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-cluster
          generateName: postgresql-prod-n97jr-
          creationTimestamp: null
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          annotations:
            crossplane.io/composition-resource-name: cluster
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
              controller: true
              blockOwnerDeletion: true
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: SGCluster
              apiVersion: stackgres.io/v1
              metadata:
                name: postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
              spec:
                configurations:
                  backups:
                    - cronSchedule: 0 22 * * *
                      retention: 6
                      sgObjectStorage: sgbackup-postgresql-prod-n97jr
                  sgPostgresConfig: postgresql-prod-n97jr
                instances: 1
                nonProductionOptions:
                  enableSetPatroniCpuRequests: true
                  enableSetPatroniMemoryRequests: true
                pods:
                  persistentVolume:
                    size: 20Gi
                  scheduling: {}
                postgres:
                  extensions:
                    - name: pg_repack
                  ssl:
                    certificateSecretKeySelector:
                      key: tls.crt
                      name: tls-certificate
                    enabled: true
                    privateKeySecretKeySelector:
                      key: tls.key
                      name: tls-certificate
                  version: "15"
                replication:
                  mode: async
                  syncInstances: 1
                sgInstanceProfile: postgresql-prod-n97jr
              status: {}
        status:
          atProvider:
            manifest: null
    - name: sg-backup
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: sg-backup
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: postgresql-prod-n97jr-object-storage
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: stackgres.io/v1beta1
              kind: SGObjectStorage
              metadata:
                name: sgbackup-postgresql-prod-n97jr
                namespace: vshn-postgresql-postgresql-prod-n97jr
              spec:
                s3Compatible:
                  awsCredentials:
                    secretKeySelectors:
                      accessKeyId:
                        key: AWS_ACCESS_KEY_ID
                        name: pgbucket-postgresql-prod-n97jr
                      secretAccessKey:
                        key: AWS_SECRET_ACCESS_KEY
                        name: pgbucket-postgresql-prod-n97jr
                  bucket: postgresql-prod-n97jr
                  enablePathStyleAddressing: true
                  endpoint: http://minio-server.minio:9000
                  region: us-east-1
                type: s3Compatible
            spec:
              writeConnectionSecretToRef:
                namespace: app1-prod
          providerConfigRef:
            name: kubernetes
    - name: namespace-conditions
      resource:
        apiVersion: kubernetes.crossplane.io/v1alpha1
        kind: Object
        metadata:
          annotations:
            crossplane.io/composition-resource-name: namespace-conditions
          generateName: postgresql-prod-n97jr-
          labels:
            crossplane.io/claim-name: postgresql-prod
            crossplane.io/claim-namespace: app1-prod
            crossplane.io/composite: postgresql-prod-n97jr
          name: vshn-postgresql-postgresql-prod-n97jr
          ownerReferences:
            - apiVersion: vshn.appcat.vshn.io/v1
              blockOwnerDeletion: true
              controller: true
              kind: XVSHNPostgreSQL
              name: postgresql-prod-n97jr
              uid: 4aafe25a-2cdc-4e75-bca7-fde60eb8c9b7
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: Namespace
              metadata:
                labels:
                  appcat.vshn.io/claim-namespace: app1-prod
                  appcat.vshn.io/servicename: postgresql-standalone
                  appuio.io/billing-name: appcat-postgresql
                  appuio.io/no-rbac-creation: "true"
                  appuio.io/organization: vshn
                name: ""
          providerConfigRef:
            name: kubernetes
    - name: postgresql-prod-n97jr-maintenance-serviceaccount
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-maintenance-serviceaccount
          creationTimestamp: null
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: ServiceAccount
              apiVersion: v1
              metadata:
                name: maintenanceserviceaccount
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
        status:
          atProvider:
            manifest: null
    - name: postgresql-prod-n97jr-maintenance-role
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-maintenance-role
          creationTimestamp: null
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: Role
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
              rules:
                - verbs:
                    - delete
                    - create
                    - get
                    - list
                    - watch
                  apiGroups:
                    - stackgres.io
                  resources:
                    - sgdbops
                - verbs:
                    - list
                    - get
                  apiGroups:
                    - stackgres.io
                  resources:
                    - sgclusters
                - verbs:
                    - get
                    - update
                  apiGroups:
                    - vshn.appcat.vshn.io
                  resources:
                    - vshnpostgresqls
        status:
          atProvider:
            manifest: null
    - name: postgresql-prod-n97jr-maintenance-rolebinding
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-maintenance-rolebinding
          creationTimestamp: null
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: RoleBinding
              apiVersion: rbac.authorization.k8s.io/v1
              metadata:
                name: crossplane:appcat:job:postgres:maintenance
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
              subjects:
                - kind: ServiceAccount
                  name: maintenanceserviceaccount
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: Role
                name: crossplane:appcat:job:postgres:maintenance
        status:
          atProvider:
            manifest: null
    - name: postgresql-prod-n97jr-maintenance-secret
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-maintenance-secret
          creationTimestamp: null
        spec:
          providerConfigRef:
            name: kubernetes
          references:
            - patchesFrom:
                apiVersion: v1
                kind: Secret
                name: stackgres-restapi
                namespace: stackgres
                fieldPath: data
              toFieldPath: data
          forProvider:
            manifest:
              kind: Secret
              apiVersion: v1
              metadata:
                name: maintenancesecret
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
              stringData:
                SG_NAMESPACE: stackgres
        status:
          atProvider:
            manifest: null
    - name: postgresql-prod-n97jr-maintenancejob
      resource:
        kind: Object
        apiVersion: kubernetes.crossplane.io/v1alpha1
        metadata:
          name: postgresql-prod-n97jr-maintenancejob
          creationTimestamp: null
        spec:
          providerConfigRef:
            name: kubernetes
          forProvider:
            manifest:
              kind: CronJob
              apiVersion: batch/v1
              metadata:
                name: maintenancejob
                namespace: vshn-postgresql-postgresql-prod-n97jr
                creationTimestamp: null
              spec:
                schedule: 21 21 * * 2
                jobTemplate:
                  metadata:
                    creationTimestamp: null
                  spec:
                    template:
                      metadata:
                        creationTimestamp: null
                      spec:
                        containers:
                          - name: maintenancejob
                            image: ghcr.io/vshn/appcat:add_PSQLServiceType
                            args:
                              - maintenance
                              - --service
                              - postgresql
                            env:
                              - name: INSTANCE_NAMESPACE
                                value: vshn-postgresql-postgresql-prod-n97jr
                              - name: CLAIM_NAME
                                value: postgresql-prod
                              - name: CLAIM_NAMESPACE
                                value: app1-prod
                              - name: SG_NAMESPACE
                                valueFrom:
                                  secretKeyRef:
                                    name: maintenancesecret
                                    key: SG_NAMESPACE
                              - name: API_USERNAME
                                valueFrom:
                                  secretKeyRef:
                                    name: maintenancesecret
                                    key: k8sUsername
                              - name: API_PASSWORD
                                valueFrom:
                                  secretKeyRef:
                                    name: maintenancesecret
                                    key: clearPassword
                            resources: {}
                        restartPolicy: Never
                        serviceAccountName: maintenanceserviceaccount
                successfulJobsHistoryLimit: 0
              status: {}
        status:
          atProvider:
            manifest: null
results:
  - severity: Normal
    message: "Function url-connection-details result: function ran successfully"
  - severity: Normal
    message: "Function user-alerting result: function ran successfully"
  - severity: Normal
    message: "Function restart result: function ran successfully"
  - severity: Normal
    message: "Function random-default-schedule result: function ran successfully"
  - severity: Normal
    message: "Function encrypted-pvc-secret result: function ran successfully"
  - severity: Normal
    message: "Function maintenance-job result: function ran successfully"
  - severity: Normal
    message: "Function mailgun-alerting result: function ran successfully"
  - severity: Normal
    message: "Function extensions result: function ran successfully"
  - severity: Normal
    message: "Function replication result: function ran successfully"
